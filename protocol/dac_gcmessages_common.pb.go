// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dac_gcmessages_common.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EGCDACCommonMessages int32

const (
	EGCDACCommonMessages_k_EMsgAnyToGCReportAsserts                   EGCDACCommonMessages = 7000
	EGCDACCommonMessages_k_EMsgAnyToGCReportAssertsResponse           EGCDACCommonMessages = 7001
	EGCDACCommonMessages_k_EMsgGCItemEditorReservationsRequest        EGCDACCommonMessages = 7283
	EGCDACCommonMessages_k_EMsgGCItemEditorReservationsResponse       EGCDACCommonMessages = 7284
	EGCDACCommonMessages_k_EMsgGCItemEditorReserveItemDef             EGCDACCommonMessages = 7285
	EGCDACCommonMessages_k_EMsgGCItemEditorReserveItemDefResponse     EGCDACCommonMessages = 7286
	EGCDACCommonMessages_k_EMsgGCItemEditorReleaseReservation         EGCDACCommonMessages = 7287
	EGCDACCommonMessages_k_EMsgGCItemEditorReleaseReservationResponse EGCDACCommonMessages = 7288
)

var EGCDACCommonMessages_name = map[int32]string{
	7000: "k_EMsgAnyToGCReportAsserts",
	7001: "k_EMsgAnyToGCReportAssertsResponse",
	7283: "k_EMsgGCItemEditorReservationsRequest",
	7284: "k_EMsgGCItemEditorReservationsResponse",
	7285: "k_EMsgGCItemEditorReserveItemDef",
	7286: "k_EMsgGCItemEditorReserveItemDefResponse",
	7287: "k_EMsgGCItemEditorReleaseReservation",
	7288: "k_EMsgGCItemEditorReleaseReservationResponse",
}

var EGCDACCommonMessages_value = map[string]int32{
	"k_EMsgAnyToGCReportAsserts":                   7000,
	"k_EMsgAnyToGCReportAssertsResponse":           7001,
	"k_EMsgGCItemEditorReservationsRequest":        7283,
	"k_EMsgGCItemEditorReservationsResponse":       7284,
	"k_EMsgGCItemEditorReserveItemDef":             7285,
	"k_EMsgGCItemEditorReserveItemDefResponse":     7286,
	"k_EMsgGCItemEditorReleaseReservation":         7287,
	"k_EMsgGCItemEditorReleaseReservationResponse": 7288,
}

func (x EGCDACCommonMessages) Enum() *EGCDACCommonMessages {
	p := new(EGCDACCommonMessages)
	*p = x
	return p
}

func (x EGCDACCommonMessages) String() string {
	return proto.EnumName(EGCDACCommonMessages_name, int32(x))
}

func (x *EGCDACCommonMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCDACCommonMessages_value, data, "EGCDACCommonMessages")
	if err != nil {
		return err
	}
	*x = EGCDACCommonMessages(value)
	return nil
}

func (EGCDACCommonMessages) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{0}
}

type EDACStoreID int32

const (
	EDACStoreID_k_EDACStoreID_Invalid      EDACStoreID = 0
	EDACStoreID_k_EDACStoreID_iOS          EDACStoreID = 1
	EDACStoreID_k_EDACStoreID_GooglePlay   EDACStoreID = 2
	EDACStoreID_k_EDACStoreID_SteamOverlay EDACStoreID = 3
	EDACStoreID_k_EDACStoreID_Test         EDACStoreID = 4
)

var EDACStoreID_name = map[int32]string{
	0: "k_EDACStoreID_Invalid",
	1: "k_EDACStoreID_iOS",
	2: "k_EDACStoreID_GooglePlay",
	3: "k_EDACStoreID_SteamOverlay",
	4: "k_EDACStoreID_Test",
}

var EDACStoreID_value = map[string]int32{
	"k_EDACStoreID_Invalid":      0,
	"k_EDACStoreID_iOS":          1,
	"k_EDACStoreID_GooglePlay":   2,
	"k_EDACStoreID_SteamOverlay": 3,
	"k_EDACStoreID_Test":         4,
}

func (x EDACStoreID) Enum() *EDACStoreID {
	p := new(EDACStoreID)
	*p = x
	return p
}

func (x EDACStoreID) String() string {
	return proto.EnumName(EDACStoreID_name, int32(x))
}

func (x *EDACStoreID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACStoreID_value, data, "EDACStoreID")
	if err != nil {
		return err
	}
	*x = EDACStoreID(value)
	return nil
}

func (EDACStoreID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{1}
}

type EDACRegionMode int32

const (
	EDACRegionMode_k_EDACRegionMode_ROW   EDACRegionMode = 0
	EDACRegionMode_k_EDACRegionMode_China EDACRegionMode = 1
)

var EDACRegionMode_name = map[int32]string{
	0: "k_EDACRegionMode_ROW",
	1: "k_EDACRegionMode_China",
}

var EDACRegionMode_value = map[string]int32{
	"k_EDACRegionMode_ROW":   0,
	"k_EDACRegionMode_China": 1,
}

func (x EDACRegionMode) Enum() *EDACRegionMode {
	p := new(EDACRegionMode)
	*p = x
	return p
}

func (x EDACRegionMode) String() string {
	return proto.EnumName(EDACRegionMode_name, int32(x))
}

func (x *EDACRegionMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACRegionMode_value, data, "EDACRegionMode")
	if err != nil {
		return err
	}
	*x = EDACRegionMode(value)
	return nil
}

func (EDACRegionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2}
}

type EDACMatchMode int32

const (
	EDACMatchMode_k_EDACMatchMode_Invalid      EDACMatchMode = 0
	EDACMatchMode_k_EDACMatchMode_Casual       EDACMatchMode = 1
	EDACMatchMode_k_EDACMatchMode_PrivateLobby EDACMatchMode = 2
	EDACMatchMode_k_EDACMatchMode_SoloBot      EDACMatchMode = 3
	EDACMatchMode_k_EDACMatchMode_Ranked       EDACMatchMode = 4
)

var EDACMatchMode_name = map[int32]string{
	0: "k_EDACMatchMode_Invalid",
	1: "k_EDACMatchMode_Casual",
	2: "k_EDACMatchMode_PrivateLobby",
	3: "k_EDACMatchMode_SoloBot",
	4: "k_EDACMatchMode_Ranked",
}

var EDACMatchMode_value = map[string]int32{
	"k_EDACMatchMode_Invalid":      0,
	"k_EDACMatchMode_Casual":       1,
	"k_EDACMatchMode_PrivateLobby": 2,
	"k_EDACMatchMode_SoloBot":      3,
	"k_EDACMatchMode_Ranked":       4,
}

func (x EDACMatchMode) Enum() *EDACMatchMode {
	p := new(EDACMatchMode)
	*p = x
	return p
}

func (x EDACMatchMode) String() string {
	return proto.EnumName(EDACMatchMode_name, int32(x))
}

func (x *EDACMatchMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACMatchMode_value, data, "EDACMatchMode")
	if err != nil {
		return err
	}
	*x = EDACMatchMode(value)
	return nil
}

func (EDACMatchMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{3}
}

type EDACGameMode int32

const (
	EDACGameMode_k_EDACGameMode_Invalid        EDACGameMode = 0
	EDACGameMode_k_EDACGameMode_Normal         EDACGameMode = 1
	EDACGameMode_k_EDACGameMode_Turbo          EDACGameMode = 2
	EDACGameMode_k_EDACGameMode_Duos           EDACGameMode = 3
	EDACGameMode_k_EDACGameMode_TechPrototypeA EDACGameMode = 4
	EDACGameMode_k_EDACGameMode_Sandbox        EDACGameMode = 5
	EDACGameMode_k_EDACGameMode_Puzzle         EDACGameMode = 6
	EDACGameMode_k_EDACGameMode_Tutorial       EDACGameMode = 7
	EDACGameMode_k_EDACGameMode_Streetfight    EDACGameMode = 8
	EDACGameMode_k_EDACGameMode_Classic        EDACGameMode = 11
)

var EDACGameMode_name = map[int32]string{
	0:  "k_EDACGameMode_Invalid",
	1:  "k_EDACGameMode_Normal",
	2:  "k_EDACGameMode_Turbo",
	3:  "k_EDACGameMode_Duos",
	4:  "k_EDACGameMode_TechPrototypeA",
	5:  "k_EDACGameMode_Sandbox",
	6:  "k_EDACGameMode_Puzzle",
	7:  "k_EDACGameMode_Tutorial",
	8:  "k_EDACGameMode_Streetfight",
	11: "k_EDACGameMode_Classic",
}

var EDACGameMode_value = map[string]int32{
	"k_EDACGameMode_Invalid":        0,
	"k_EDACGameMode_Normal":         1,
	"k_EDACGameMode_Turbo":          2,
	"k_EDACGameMode_Duos":           3,
	"k_EDACGameMode_TechPrototypeA": 4,
	"k_EDACGameMode_Sandbox":        5,
	"k_EDACGameMode_Puzzle":         6,
	"k_EDACGameMode_Tutorial":       7,
	"k_EDACGameMode_Streetfight":    8,
	"k_EDACGameMode_Classic":        11,
}

func (x EDACGameMode) Enum() *EDACGameMode {
	p := new(EDACGameMode)
	*p = x
	return p
}

func (x EDACGameMode) String() string {
	return proto.EnumName(EDACGameMode_name, int32(x))
}

func (x *EDACGameMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACGameMode_value, data, "EDACGameMode")
	if err != nil {
		return err
	}
	*x = EDACGameMode(value)
	return nil
}

func (EDACGameMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{4}
}

type EDACLobbyTeam int32

const (
	EDACLobbyTeam_k_EDACLobbyTeam_Team0     EDACLobbyTeam = 0
	EDACLobbyTeam_k_EDACLobbyTeam_Team1     EDACLobbyTeam = 1
	EDACLobbyTeam_k_EDACLobbyTeam_Team2     EDACLobbyTeam = 2
	EDACLobbyTeam_k_EDACLobbyTeam_Team3     EDACLobbyTeam = 3
	EDACLobbyTeam_k_EDACLobbyTeam_Team4     EDACLobbyTeam = 4
	EDACLobbyTeam_k_EDACLobbyTeam_Team5     EDACLobbyTeam = 5
	EDACLobbyTeam_k_EDACLobbyTeam_Team6     EDACLobbyTeam = 6
	EDACLobbyTeam_k_EDACLobbyTeam_Team7     EDACLobbyTeam = 7
	EDACLobbyTeam_k_EDACLobbyTeam_Spectator EDACLobbyTeam = 250
)

var EDACLobbyTeam_name = map[int32]string{
	0:   "k_EDACLobbyTeam_Team0",
	1:   "k_EDACLobbyTeam_Team1",
	2:   "k_EDACLobbyTeam_Team2",
	3:   "k_EDACLobbyTeam_Team3",
	4:   "k_EDACLobbyTeam_Team4",
	5:   "k_EDACLobbyTeam_Team5",
	6:   "k_EDACLobbyTeam_Team6",
	7:   "k_EDACLobbyTeam_Team7",
	250: "k_EDACLobbyTeam_Spectator",
}

var EDACLobbyTeam_value = map[string]int32{
	"k_EDACLobbyTeam_Team0":     0,
	"k_EDACLobbyTeam_Team1":     1,
	"k_EDACLobbyTeam_Team2":     2,
	"k_EDACLobbyTeam_Team3":     3,
	"k_EDACLobbyTeam_Team4":     4,
	"k_EDACLobbyTeam_Team5":     5,
	"k_EDACLobbyTeam_Team6":     6,
	"k_EDACLobbyTeam_Team7":     7,
	"k_EDACLobbyTeam_Spectator": 250,
}

func (x EDACLobbyTeam) Enum() *EDACLobbyTeam {
	p := new(EDACLobbyTeam)
	*p = x
	return p
}

func (x EDACLobbyTeam) String() string {
	return proto.EnumName(EDACLobbyTeam_name, int32(x))
}

func (x *EDACLobbyTeam) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACLobbyTeam_value, data, "EDACLobbyTeam")
	if err != nil {
		return err
	}
	*x = EDACLobbyTeam(value)
	return nil
}

func (EDACLobbyTeam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5}
}

type EDACBotDifficulty int32

const (
	EDACBotDifficulty_k_EDACBotDifficulty_None      EDACBotDifficulty = 0
	EDACBotDifficulty_k_EDACBotDifficulty_Easy      EDACBotDifficulty = 1
	EDACBotDifficulty_k_EDACBotDifficulty_Medium    EDACBotDifficulty = 2
	EDACBotDifficulty_k_EDACBotDifficulty_Hard      EDACBotDifficulty = 3
	EDACBotDifficulty_k_EDACBotDifficulty_Nightmare EDACBotDifficulty = 4
	EDACBotDifficulty_k_EDACBotDifficulty_ML        EDACBotDifficulty = 5
	EDACBotDifficulty_k_EDACBotDifficulty_MommaEeb  EDACBotDifficulty = 6
)

var EDACBotDifficulty_name = map[int32]string{
	0: "k_EDACBotDifficulty_None",
	1: "k_EDACBotDifficulty_Easy",
	2: "k_EDACBotDifficulty_Medium",
	3: "k_EDACBotDifficulty_Hard",
	4: "k_EDACBotDifficulty_Nightmare",
	5: "k_EDACBotDifficulty_ML",
	6: "k_EDACBotDifficulty_MommaEeb",
}

var EDACBotDifficulty_value = map[string]int32{
	"k_EDACBotDifficulty_None":      0,
	"k_EDACBotDifficulty_Easy":      1,
	"k_EDACBotDifficulty_Medium":    2,
	"k_EDACBotDifficulty_Hard":      3,
	"k_EDACBotDifficulty_Nightmare": 4,
	"k_EDACBotDifficulty_ML":        5,
	"k_EDACBotDifficulty_MommaEeb":  6,
}

func (x EDACBotDifficulty) Enum() *EDACBotDifficulty {
	p := new(EDACBotDifficulty)
	*p = x
	return p
}

func (x EDACBotDifficulty) String() string {
	return proto.EnumName(EDACBotDifficulty_name, int32(x))
}

func (x *EDACBotDifficulty) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACBotDifficulty_value, data, "EDACBotDifficulty")
	if err != nil {
		return err
	}
	*x = EDACBotDifficulty(value)
	return nil
}

func (EDACBotDifficulty) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{6}
}

type EDACAIType int32

const (
	EDACAIType_k_EDACAIType_Invalid EDACAIType = 0
	EDACAIType_k_EDACAIType_Lvl1    EDACAIType = 1
	EDACAIType_k_EDACAIType_Lvl2    EDACAIType = 2
	EDACAIType_k_EDACAIType_Lvl3    EDACAIType = 3
	EDACAIType_k_EDACAIType_Lvl4    EDACAIType = 4
	EDACAIType_k_EDACAIType_Lvl5    EDACAIType = 5
	EDACAIType_k_EDACAIType_Lvl6    EDACAIType = 6
	EDACAIType_k_EDACAIType_Lvl7    EDACAIType = 7
	EDACAIType_k_EDACAIType_Lvl8    EDACAIType = 8
	EDACAIType_k_EDACAIType_ML      EDACAIType = 19
	EDACAIType_k_EDACAIType_PB0     EDACAIType = 20
	EDACAIType_k_EDACAIType_PB1     EDACAIType = 21
	EDACAIType_k_EDACAIType_PB2     EDACAIType = 22
	EDACAIType_k_EDACAIType_PB3     EDACAIType = 23
	EDACAIType_k_EDACAIType_PB4     EDACAIType = 24
	EDACAIType_k_EDACAIType_PB5     EDACAIType = 25
	EDACAIType_k_EDACAIType_PB6     EDACAIType = 26
	EDACAIType_k_EDACAIType_PB7     EDACAIType = 27
	EDACAIType_k_EDACAIType_PB8     EDACAIType = 28
	EDACAIType_k_EDACAIType_PB9     EDACAIType = 29
	EDACAIType_k_EDACAIType_PB10    EDACAIType = 30
	EDACAIType_k_EDACAIType_PB11    EDACAIType = 31
	EDACAIType_k_EDACAIType_PB12    EDACAIType = 32
	EDACAIType_k_EDACAIType_PB13    EDACAIType = 33
	EDACAIType_k_EDACAIType_PB14    EDACAIType = 34
	EDACAIType_k_EDACAIType_PB15    EDACAIType = 35
	EDACAIType_k_EDACAIType_PB16    EDACAIType = 36
	EDACAIType_k_EDACAIType_PB17    EDACAIType = 37
	EDACAIType_k_EDACAIType_PB18    EDACAIType = 38
	EDACAIType_k_EDACAIType_PB19    EDACAIType = 39
	EDACAIType_k_EDACAIType_PB20    EDACAIType = 40
	EDACAIType_k_EDACAIType_PB21    EDACAIType = 41
	EDACAIType_k_EDACAIType_PB22    EDACAIType = 42
	EDACAIType_k_EDACAIType_PB23    EDACAIType = 43
	EDACAIType_k_EDACAIType_PB24    EDACAIType = 44
	EDACAIType_k_EDACAIType_PB25    EDACAIType = 45
	EDACAIType_k_EDACAIType_PB26    EDACAIType = 46
	EDACAIType_k_EDACAIType_PB27    EDACAIType = 47
	EDACAIType_k_EDACAIType_PB28    EDACAIType = 48
	EDACAIType_k_EDACAIType_PB29    EDACAIType = 49
	EDACAIType_k_EDACAIType_PB30    EDACAIType = 50
	EDACAIType_k_EDACAIType_PB31    EDACAIType = 51
	EDACAIType_k_EDACAIType_PB32    EDACAIType = 52
	EDACAIType_k_EDACAIType_PB33    EDACAIType = 53
	EDACAIType_k_EDACAIType_PB34    EDACAIType = 54
	EDACAIType_k_EDACAIType_PB35    EDACAIType = 55
)

var EDACAIType_name = map[int32]string{
	0:  "k_EDACAIType_Invalid",
	1:  "k_EDACAIType_Lvl1",
	2:  "k_EDACAIType_Lvl2",
	3:  "k_EDACAIType_Lvl3",
	4:  "k_EDACAIType_Lvl4",
	5:  "k_EDACAIType_Lvl5",
	6:  "k_EDACAIType_Lvl6",
	7:  "k_EDACAIType_Lvl7",
	8:  "k_EDACAIType_Lvl8",
	19: "k_EDACAIType_ML",
	20: "k_EDACAIType_PB0",
	21: "k_EDACAIType_PB1",
	22: "k_EDACAIType_PB2",
	23: "k_EDACAIType_PB3",
	24: "k_EDACAIType_PB4",
	25: "k_EDACAIType_PB5",
	26: "k_EDACAIType_PB6",
	27: "k_EDACAIType_PB7",
	28: "k_EDACAIType_PB8",
	29: "k_EDACAIType_PB9",
	30: "k_EDACAIType_PB10",
	31: "k_EDACAIType_PB11",
	32: "k_EDACAIType_PB12",
	33: "k_EDACAIType_PB13",
	34: "k_EDACAIType_PB14",
	35: "k_EDACAIType_PB15",
	36: "k_EDACAIType_PB16",
	37: "k_EDACAIType_PB17",
	38: "k_EDACAIType_PB18",
	39: "k_EDACAIType_PB19",
	40: "k_EDACAIType_PB20",
	41: "k_EDACAIType_PB21",
	42: "k_EDACAIType_PB22",
	43: "k_EDACAIType_PB23",
	44: "k_EDACAIType_PB24",
	45: "k_EDACAIType_PB25",
	46: "k_EDACAIType_PB26",
	47: "k_EDACAIType_PB27",
	48: "k_EDACAIType_PB28",
	49: "k_EDACAIType_PB29",
	50: "k_EDACAIType_PB30",
	51: "k_EDACAIType_PB31",
	52: "k_EDACAIType_PB32",
	53: "k_EDACAIType_PB33",
	54: "k_EDACAIType_PB34",
	55: "k_EDACAIType_PB35",
}

var EDACAIType_value = map[string]int32{
	"k_EDACAIType_Invalid": 0,
	"k_EDACAIType_Lvl1":    1,
	"k_EDACAIType_Lvl2":    2,
	"k_EDACAIType_Lvl3":    3,
	"k_EDACAIType_Lvl4":    4,
	"k_EDACAIType_Lvl5":    5,
	"k_EDACAIType_Lvl6":    6,
	"k_EDACAIType_Lvl7":    7,
	"k_EDACAIType_Lvl8":    8,
	"k_EDACAIType_ML":      19,
	"k_EDACAIType_PB0":     20,
	"k_EDACAIType_PB1":     21,
	"k_EDACAIType_PB2":     22,
	"k_EDACAIType_PB3":     23,
	"k_EDACAIType_PB4":     24,
	"k_EDACAIType_PB5":     25,
	"k_EDACAIType_PB6":     26,
	"k_EDACAIType_PB7":     27,
	"k_EDACAIType_PB8":     28,
	"k_EDACAIType_PB9":     29,
	"k_EDACAIType_PB10":    30,
	"k_EDACAIType_PB11":    31,
	"k_EDACAIType_PB12":    32,
	"k_EDACAIType_PB13":    33,
	"k_EDACAIType_PB14":    34,
	"k_EDACAIType_PB15":    35,
	"k_EDACAIType_PB16":    36,
	"k_EDACAIType_PB17":    37,
	"k_EDACAIType_PB18":    38,
	"k_EDACAIType_PB19":    39,
	"k_EDACAIType_PB20":    40,
	"k_EDACAIType_PB21":    41,
	"k_EDACAIType_PB22":    42,
	"k_EDACAIType_PB23":    43,
	"k_EDACAIType_PB24":    44,
	"k_EDACAIType_PB25":    45,
	"k_EDACAIType_PB26":    46,
	"k_EDACAIType_PB27":    47,
	"k_EDACAIType_PB28":    48,
	"k_EDACAIType_PB29":    49,
	"k_EDACAIType_PB30":    50,
	"k_EDACAIType_PB31":    51,
	"k_EDACAIType_PB32":    52,
	"k_EDACAIType_PB33":    53,
	"k_EDACAIType_PB34":    54,
	"k_EDACAIType_PB35":    55,
}

func (x EDACAIType) Enum() *EDACAIType {
	p := new(EDACAIType)
	*p = x
	return p
}

func (x EDACAIType) String() string {
	return proto.EnumName(EDACAIType_name, int32(x))
}

func (x *EDACAIType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACAIType_value, data, "EDACAIType")
	if err != nil {
		return err
	}
	*x = EDACAIType(value)
	return nil
}

func (EDACAIType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{7}
}

type EDACMatchState int32

const (
	EDACMatchState_k_EMatchState_InProgress           EDACMatchState = 0
	EDACMatchState_k_EMatchState_Completed            EDACMatchState = 1
	EDACMatchState_k_EMatchState_Failed_NetworkIssues EDACMatchState = 2
	EDACMatchState_k_EMatchState_Failed_ServerCrash   EDACMatchState = 3
)

var EDACMatchState_name = map[int32]string{
	0: "k_EMatchState_InProgress",
	1: "k_EMatchState_Completed",
	2: "k_EMatchState_Failed_NetworkIssues",
	3: "k_EMatchState_Failed_ServerCrash",
}

var EDACMatchState_value = map[string]int32{
	"k_EMatchState_InProgress":           0,
	"k_EMatchState_Completed":            1,
	"k_EMatchState_Failed_NetworkIssues": 2,
	"k_EMatchState_Failed_ServerCrash":   3,
}

func (x EDACMatchState) Enum() *EDACMatchState {
	p := new(EDACMatchState)
	*p = x
	return p
}

func (x EDACMatchState) String() string {
	return proto.EnumName(EDACMatchState_name, int32(x))
}

func (x *EDACMatchState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACMatchState_value, data, "EDACMatchState")
	if err != nil {
		return err
	}
	*x = EDACMatchState(value)
	return nil
}

func (EDACMatchState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{8}
}

type EDACPlayerState int32

const (
	EDACPlayerState_k_EPlayerState_Playing       EDACPlayerState = 0
	EDACPlayerState_k_EPlayerState_Eliminated    EDACPlayerState = 1
	EDACPlayerState_k_EPlayerState_Abandoned     EDACPlayerState = 2
	EDACPlayerState_k_EPlayerState_Disconnected  EDACPlayerState = 3
	EDACPlayerState_k_EPlayerState_ServerCrashed EDACPlayerState = 4
)

var EDACPlayerState_name = map[int32]string{
	0: "k_EPlayerState_Playing",
	1: "k_EPlayerState_Eliminated",
	2: "k_EPlayerState_Abandoned",
	3: "k_EPlayerState_Disconnected",
	4: "k_EPlayerState_ServerCrashed",
}

var EDACPlayerState_value = map[string]int32{
	"k_EPlayerState_Playing":       0,
	"k_EPlayerState_Eliminated":    1,
	"k_EPlayerState_Abandoned":     2,
	"k_EPlayerState_Disconnected":  3,
	"k_EPlayerState_ServerCrashed": 4,
}

func (x EDACPlayerState) Enum() *EDACPlayerState {
	p := new(EDACPlayerState)
	*p = x
	return p
}

func (x EDACPlayerState) String() string {
	return proto.EnumName(EDACPlayerState_name, int32(x))
}

func (x *EDACPlayerState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDACPlayerState_value, data, "EDACPlayerState")
	if err != nil {
		return err
	}
	*x = EDACPlayerState(value)
	return nil
}

func (EDACPlayerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{9}
}

type ELobbyServerState int32

const (
	ELobbyServerState_k_eLobbyServerState_Assign    ELobbyServerState = 0
	ELobbyServerState_k_eLobbyServerState_InGame    ELobbyServerState = 1
	ELobbyServerState_k_eLobbyServerState_PostMatch ELobbyServerState = 2
	ELobbyServerState_k_eLobbyServerState_SignedOut ELobbyServerState = 3
	ELobbyServerState_k_eLobbyServerState_Abandoned ELobbyServerState = 4
)

var ELobbyServerState_name = map[int32]string{
	0: "k_eLobbyServerState_Assign",
	1: "k_eLobbyServerState_InGame",
	2: "k_eLobbyServerState_PostMatch",
	3: "k_eLobbyServerState_SignedOut",
	4: "k_eLobbyServerState_Abandoned",
}

var ELobbyServerState_value = map[string]int32{
	"k_eLobbyServerState_Assign":    0,
	"k_eLobbyServerState_InGame":    1,
	"k_eLobbyServerState_PostMatch": 2,
	"k_eLobbyServerState_SignedOut": 3,
	"k_eLobbyServerState_Abandoned": 4,
}

func (x ELobbyServerState) Enum() *ELobbyServerState {
	p := new(ELobbyServerState)
	*p = x
	return p
}

func (x ELobbyServerState) String() string {
	return proto.EnumName(ELobbyServerState_name, int32(x))
}

func (x *ELobbyServerState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ELobbyServerState_value, data, "ELobbyServerState")
	if err != nil {
		return err
	}
	*x = ELobbyServerState(value)
	return nil
}

func (ELobbyServerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{10}
}

type CSODACParty_EMemberRights int32

const (
	CSODACParty_k_eMemberRights_Admin        CSODACParty_EMemberRights = 1
	CSODACParty_k_eMemberRights_Creator      CSODACParty_EMemberRights = 2
	CSODACParty_k_eMemberRights_RankedMM     CSODACParty_EMemberRights = 4
	CSODACParty_k_eMemberRights_HighRankedMM CSODACParty_EMemberRights = 8
)

var CSODACParty_EMemberRights_name = map[int32]string{
	1: "k_eMemberRights_Admin",
	2: "k_eMemberRights_Creator",
	4: "k_eMemberRights_RankedMM",
	8: "k_eMemberRights_HighRankedMM",
}

var CSODACParty_EMemberRights_value = map[string]int32{
	"k_eMemberRights_Admin":        1,
	"k_eMemberRights_Creator":      2,
	"k_eMemberRights_RankedMM":     4,
	"k_eMemberRights_HighRankedMM": 8,
}

func (x CSODACParty_EMemberRights) Enum() *CSODACParty_EMemberRights {
	p := new(CSODACParty_EMemberRights)
	*p = x
	return p
}

func (x CSODACParty_EMemberRights) String() string {
	return proto.EnumName(CSODACParty_EMemberRights_name, int32(x))
}

func (x *CSODACParty_EMemberRights) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSODACParty_EMemberRights_value, data, "CSODACParty_EMemberRights")
	if err != nil {
		return err
	}
	*x = CSODACParty_EMemberRights(value)
	return nil
}

func (CSODACParty_EMemberRights) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 0}
}

type CSODACParty_EPlayerType int32

const (
	CSODACParty_k_ePlayerType_Player    CSODACParty_EPlayerType = 0
	CSODACParty_k_ePlayerType_Spectator CSODACParty_EPlayerType = 1
)

var CSODACParty_EPlayerType_name = map[int32]string{
	0: "k_ePlayerType_Player",
	1: "k_ePlayerType_Spectator",
}

var CSODACParty_EPlayerType_value = map[string]int32{
	"k_ePlayerType_Player":    0,
	"k_ePlayerType_Spectator": 1,
}

func (x CSODACParty_EPlayerType) Enum() *CSODACParty_EPlayerType {
	p := new(CSODACParty_EPlayerType)
	*p = x
	return p
}

func (x CSODACParty_EPlayerType) String() string {
	return proto.EnumName(CSODACParty_EPlayerType_name, int32(x))
}

func (x *CSODACParty_EPlayerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSODACParty_EPlayerType_value, data, "CSODACParty_EPlayerType")
	if err != nil {
		return err
	}
	*x = CSODACParty_EPlayerType(value)
	return nil
}

func (CSODACParty_EPlayerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 1}
}

type CSODACParty_ETeamFlags int32

const (
	CSODACParty_k_eTeamFlags_CanRename      CSODACParty_ETeamFlags = 1
	CSODACParty_k_eTeamFlags_RenameCooldown CSODACParty_ETeamFlags = 2
)

var CSODACParty_ETeamFlags_name = map[int32]string{
	1: "k_eTeamFlags_CanRename",
	2: "k_eTeamFlags_RenameCooldown",
}

var CSODACParty_ETeamFlags_value = map[string]int32{
	"k_eTeamFlags_CanRename":      1,
	"k_eTeamFlags_RenameCooldown": 2,
}

func (x CSODACParty_ETeamFlags) Enum() *CSODACParty_ETeamFlags {
	p := new(CSODACParty_ETeamFlags)
	*p = x
	return p
}

func (x CSODACParty_ETeamFlags) String() string {
	return proto.EnumName(CSODACParty_ETeamFlags_name, int32(x))
}

func (x *CSODACParty_ETeamFlags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSODACParty_ETeamFlags_value, data, "CSODACParty_ETeamFlags")
	if err != nil {
		return err
	}
	*x = CSODACParty_ETeamFlags(value)
	return nil
}

func (CSODACParty_ETeamFlags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 2}
}

type CMsgGameModifiers struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGameModifiers) Reset()         { *m = CMsgGameModifiers{} }
func (m *CMsgGameModifiers) String() string { return proto.CompactTextString(m) }
func (*CMsgGameModifiers) ProtoMessage()    {}
func (*CMsgGameModifiers) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{0}
}

func (m *CMsgGameModifiers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameModifiers.Unmarshal(m, b)
}
func (m *CMsgGameModifiers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameModifiers.Marshal(b, m, deterministic)
}
func (m *CMsgGameModifiers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameModifiers.Merge(m, src)
}
func (m *CMsgGameModifiers) XXX_Size() int {
	return xxx_messageInfo_CMsgGameModifiers.Size(m)
}
func (m *CMsgGameModifiers) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameModifiers.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameModifiers proto.InternalMessageInfo

type CMsgTeamInfo struct {
	MemberAccountIds     []uint32 `protobuf:"varint,1,rep,packed,name=member_account_ids,json=memberAccountIds" json:"member_account_ids,omitempty"`
	TeamName             *string  `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	MmrLevelScore        *uint32  `protobuf:"varint,3,opt,name=mmr_level_score,json=mmrLevelScore" json:"mmr_level_score,omitempty"`
	MmrLevel             *uint32  `protobuf:"varint,4,opt,name=mmr_level,json=mmrLevel" json:"mmr_level,omitempty"`
	MmrLeaderboardPlace  *uint32  `protobuf:"varint,5,opt,name=mmr_leaderboard_place,json=mmrLeaderboardPlace" json:"mmr_leaderboard_place,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgTeamInfo) Reset()         { *m = CMsgTeamInfo{} }
func (m *CMsgTeamInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgTeamInfo) ProtoMessage()    {}
func (*CMsgTeamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{1}
}

func (m *CMsgTeamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgTeamInfo.Unmarshal(m, b)
}
func (m *CMsgTeamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgTeamInfo.Marshal(b, m, deterministic)
}
func (m *CMsgTeamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgTeamInfo.Merge(m, src)
}
func (m *CMsgTeamInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgTeamInfo.Size(m)
}
func (m *CMsgTeamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgTeamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgTeamInfo proto.InternalMessageInfo

func (m *CMsgTeamInfo) GetMemberAccountIds() []uint32 {
	if m != nil {
		return m.MemberAccountIds
	}
	return nil
}

func (m *CMsgTeamInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgTeamInfo) GetMmrLevelScore() uint32 {
	if m != nil && m.MmrLevelScore != nil {
		return *m.MmrLevelScore
	}
	return 0
}

func (m *CMsgTeamInfo) GetMmrLevel() uint32 {
	if m != nil && m.MmrLevel != nil {
		return *m.MmrLevel
	}
	return 0
}

func (m *CMsgTeamInfo) GetMmrLeaderboardPlace() uint32 {
	if m != nil && m.MmrLeaderboardPlace != nil {
		return *m.MmrLeaderboardPlace
	}
	return 0
}

type CServerLobbyData_PlayerInfo struct {
	AccountId             *uint32                                    `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MmrLevel              *uint32                                    `protobuf:"varint,2,opt,name=mmr_level,json=mmrLevel" json:"mmr_level,omitempty"`
	Loadout               []*CServerLobbyData_PlayerInfo_LoadoutSlot `protobuf:"bytes,3,rep,name=loadout" json:"loadout,omitempty"`
	Events                []*CServerLobbyData_PlayerInfo_Event       `protobuf:"bytes,4,rep,name=events" json:"events,omitempty"`
	GlobalLeaderboardRank *uint32                                    `protobuf:"varint,5,opt,name=global_leaderboard_rank,json=globalLeaderboardRank" json:"global_leaderboard_rank,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                   `json:"-"`
	XXX_unrecognized      []byte                                     `json:"-"`
	XXX_sizecache         int32                                      `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo) Reset()         { *m = CServerLobbyData_PlayerInfo{} }
func (m *CServerLobbyData_PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2}
}

func (m *CServerLobbyData_PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo.Size(m)
}
func (m *CServerLobbyData_PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo) GetMmrLevel() uint32 {
	if m != nil && m.MmrLevel != nil {
		return *m.MmrLevel
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo) GetLoadout() []*CServerLobbyData_PlayerInfo_LoadoutSlot {
	if m != nil {
		return m.Loadout
	}
	return nil
}

func (m *CServerLobbyData_PlayerInfo) GetEvents() []*CServerLobbyData_PlayerInfo_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *CServerLobbyData_PlayerInfo) GetGlobalLeaderboardRank() uint32 {
	if m != nil && m.GlobalLeaderboardRank != nil {
		return *m.GlobalLeaderboardRank
	}
	return 0
}

type CServerLobbyData_PlayerInfo_LoadoutSlot struct {
	LoadoutSlot          *uint32  `protobuf:"varint,1,opt,name=loadout_slot,json=loadoutSlot" json:"loadout_slot,omitempty"`
	DefIndex             *uint32  `protobuf:"varint,2,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	LoadoutSubSlot       *uint32  `protobuf:"varint,3,opt,name=loadout_sub_slot,json=loadoutSubSlot" json:"loadout_sub_slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) Reset() {
	*m = CServerLobbyData_PlayerInfo_LoadoutSlot{}
}
func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo_LoadoutSlot) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo_LoadoutSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2, 0}
}

func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot.Size(m)
}
func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo_LoadoutSlot proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) GetLoadoutSlot() uint32 {
	if m != nil && m.LoadoutSlot != nil {
		return *m.LoadoutSlot
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_LoadoutSlot) GetLoadoutSubSlot() uint32 {
	if m != nil && m.LoadoutSubSlot != nil {
		return *m.LoadoutSubSlot
	}
	return 0
}

type CServerLobbyData_PlayerInfo_Currency struct {
	CurrencyId           *uint32  `protobuf:"varint,1,opt,name=currency_id,json=currencyId" json:"currency_id,omitempty"`
	Amount               *uint32  `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo_Currency) Reset()         { *m = CServerLobbyData_PlayerInfo_Currency{} }
func (m *CServerLobbyData_PlayerInfo_Currency) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo_Currency) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo_Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2, 1}
}

func (m *CServerLobbyData_PlayerInfo_Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo_Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo_Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo_Currency) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency.Size(m)
}
func (m *CServerLobbyData_PlayerInfo_Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo_Currency proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo_Currency) GetCurrencyId() uint32 {
	if m != nil && m.CurrencyId != nil {
		return *m.CurrencyId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Currency) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type CServerLobbyData_PlayerInfo_Challenge struct {
	ChallengeId          *uint32  `protobuf:"varint,1,opt,name=challenge_id,json=challengeId" json:"challenge_id,omitempty"`
	Progress             *uint32  `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	SequenceId           *uint32  `protobuf:"varint,3,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	SlotId               *uint32  `protobuf:"varint,4,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	ConfigId             *uint32  `protobuf:"varint,5,opt,name=config_id,json=configId" json:"config_id,omitempty"`
	Claimed              *uint32  `protobuf:"varint,6,opt,name=claimed" json:"claimed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo_Challenge) Reset()         { *m = CServerLobbyData_PlayerInfo_Challenge{} }
func (m *CServerLobbyData_PlayerInfo_Challenge) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo_Challenge) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo_Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2, 2}
}

func (m *CServerLobbyData_PlayerInfo_Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo_Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo_Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo_Challenge) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge.Size(m)
}
func (m *CServerLobbyData_PlayerInfo_Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo_Challenge proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo_Challenge) GetChallengeId() uint32 {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Challenge) GetProgress() uint32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Challenge) GetSequenceId() uint32 {
	if m != nil && m.SequenceId != nil {
		return *m.SequenceId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Challenge) GetSlotId() uint32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Challenge) GetConfigId() uint32 {
	if m != nil && m.ConfigId != nil {
		return *m.ConfigId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Challenge) GetClaimed() uint32 {
	if m != nil && m.Claimed != nil {
		return *m.Claimed
	}
	return 0
}

type CServerLobbyData_PlayerInfo_VirtualItem struct {
	DefIndex             *uint32  `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	EquipSlot            *uint32  `protobuf:"varint,2,opt,name=equip_slot,json=equipSlot" json:"equip_slot,omitempty"`
	EquipSubSlot         *uint32  `protobuf:"varint,3,opt,name=equip_sub_slot,json=equipSubSlot" json:"equip_sub_slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo_VirtualItem) Reset() {
	*m = CServerLobbyData_PlayerInfo_VirtualItem{}
}
func (m *CServerLobbyData_PlayerInfo_VirtualItem) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo_VirtualItem) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo_VirtualItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2, 3}
}

func (m *CServerLobbyData_PlayerInfo_VirtualItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo_VirtualItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo_VirtualItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo_VirtualItem) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem.Size(m)
}
func (m *CServerLobbyData_PlayerInfo_VirtualItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo_VirtualItem proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo_VirtualItem) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_VirtualItem) GetEquipSlot() uint32 {
	if m != nil && m.EquipSlot != nil {
		return *m.EquipSlot
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_VirtualItem) GetEquipSubSlot() uint32 {
	if m != nil && m.EquipSubSlot != nil {
		return *m.EquipSubSlot
	}
	return 0
}

type CServerLobbyData_PlayerInfo_Event struct {
	EventId              *uint32                                    `protobuf:"varint,1,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	EventOwned           *bool                                      `protobuf:"varint,2,opt,name=event_owned,json=eventOwned" json:"event_owned,omitempty"`
	Challenges           []*CServerLobbyData_PlayerInfo_Challenge   `protobuf:"bytes,3,rep,name=challenges" json:"challenges,omitempty"`
	Currencies           []*CServerLobbyData_PlayerInfo_Currency    `protobuf:"bytes,4,rep,name=currencies" json:"currencies,omitempty"`
	VirtualItems         []*CServerLobbyData_PlayerInfo_VirtualItem `protobuf:"bytes,5,rep,name=virtual_items,json=virtualItems" json:"virtual_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CServerLobbyData_PlayerInfo_Event) Reset()         { *m = CServerLobbyData_PlayerInfo_Event{} }
func (m *CServerLobbyData_PlayerInfo_Event) String() string { return proto.CompactTextString(m) }
func (*CServerLobbyData_PlayerInfo_Event) ProtoMessage()    {}
func (*CServerLobbyData_PlayerInfo_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{2, 4}
}

func (m *CServerLobbyData_PlayerInfo_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Event.Unmarshal(m, b)
}
func (m *CServerLobbyData_PlayerInfo_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Event.Marshal(b, m, deterministic)
}
func (m *CServerLobbyData_PlayerInfo_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Event.Merge(m, src)
}
func (m *CServerLobbyData_PlayerInfo_Event) XXX_Size() int {
	return xxx_messageInfo_CServerLobbyData_PlayerInfo_Event.Size(m)
}
func (m *CServerLobbyData_PlayerInfo_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerLobbyData_PlayerInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_CServerLobbyData_PlayerInfo_Event proto.InternalMessageInfo

func (m *CServerLobbyData_PlayerInfo_Event) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CServerLobbyData_PlayerInfo_Event) GetEventOwned() bool {
	if m != nil && m.EventOwned != nil {
		return *m.EventOwned
	}
	return false
}

func (m *CServerLobbyData_PlayerInfo_Event) GetChallenges() []*CServerLobbyData_PlayerInfo_Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

func (m *CServerLobbyData_PlayerInfo_Event) GetCurrencies() []*CServerLobbyData_PlayerInfo_Currency {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *CServerLobbyData_PlayerInfo_Event) GetVirtualItems() []*CServerLobbyData_PlayerInfo_VirtualItem {
	if m != nil {
		return m.VirtualItems
	}
	return nil
}

type CMsgRegionPingTimesClient struct {
	DataCenterCodes      []uint32 `protobuf:"fixed32,1,rep,packed,name=data_center_codes,json=dataCenterCodes" json:"data_center_codes,omitempty"`
	PingTimes            []uint32 `protobuf:"varint,2,rep,packed,name=ping_times,json=pingTimes" json:"ping_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgRegionPingTimesClient) Reset()         { *m = CMsgRegionPingTimesClient{} }
func (m *CMsgRegionPingTimesClient) String() string { return proto.CompactTextString(m) }
func (*CMsgRegionPingTimesClient) ProtoMessage()    {}
func (*CMsgRegionPingTimesClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{3}
}

func (m *CMsgRegionPingTimesClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgRegionPingTimesClient.Unmarshal(m, b)
}
func (m *CMsgRegionPingTimesClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgRegionPingTimesClient.Marshal(b, m, deterministic)
}
func (m *CMsgRegionPingTimesClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgRegionPingTimesClient.Merge(m, src)
}
func (m *CMsgRegionPingTimesClient) XXX_Size() int {
	return xxx_messageInfo_CMsgRegionPingTimesClient.Size(m)
}
func (m *CMsgRegionPingTimesClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgRegionPingTimesClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgRegionPingTimesClient proto.InternalMessageInfo

func (m *CMsgRegionPingTimesClient) GetDataCenterCodes() []uint32 {
	if m != nil {
		return m.DataCenterCodes
	}
	return nil
}

func (m *CMsgRegionPingTimesClient) GetPingTimes() []uint32 {
	if m != nil {
		return m.PingTimes
	}
	return nil
}

type CSODACLobby struct {
	ServerVersion         *uint32            `protobuf:"varint,1,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	CompatibilityVersion  *uint32            `protobuf:"varint,2,opt,name=compatibility_version,json=compatibilityVersion" json:"compatibility_version,omitempty"`
	ServerSteamId         *uint64            `protobuf:"fixed64,3,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	DevIgnoreStagingFiles *bool              `protobuf:"varint,4,opt,name=dev_ignore_staging_files,json=devIgnoreStagingFiles" json:"dev_ignore_staging_files,omitempty"`
	LobbyId               *uint64            `protobuf:"varint,5,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	MatchId               *uint64            `protobuf:"varint,6,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	ServerState           *ELobbyServerState `protobuf:"varint,8,opt,name=server_state,json=serverState,enum=protocol.ELobbyServerState,def=0" json:"server_state,omitempty"`
	MatchMode             *EDACMatchMode     `protobuf:"varint,10,opt,name=match_mode,json=matchMode,enum=protocol.EDACMatchMode,def=0" json:"match_mode,omitempty"`
	UdpConnectIp          *uint32            `protobuf:"varint,11,opt,name=udp_connect_ip,json=udpConnectIp" json:"udp_connect_ip,omitempty"`
	UdpConnectPort        *uint32            `protobuf:"varint,12,opt,name=udp_connect_port,json=udpConnectPort" json:"udp_connect_port,omitempty"`
	GameMode              *EDACGameMode      `protobuf:"varint,13,opt,name=game_mode,json=gameMode,enum=protocol.EDACGameMode,def=0" json:"game_mode,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *CSODACLobby) Reset()         { *m = CSODACLobby{} }
func (m *CSODACLobby) String() string { return proto.CompactTextString(m) }
func (*CSODACLobby) ProtoMessage()    {}
func (*CSODACLobby) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{4}
}

func (m *CSODACLobby) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACLobby.Unmarshal(m, b)
}
func (m *CSODACLobby) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACLobby.Marshal(b, m, deterministic)
}
func (m *CSODACLobby) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACLobby.Merge(m, src)
}
func (m *CSODACLobby) XXX_Size() int {
	return xxx_messageInfo_CSODACLobby.Size(m)
}
func (m *CSODACLobby) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACLobby.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACLobby proto.InternalMessageInfo

const Default_CSODACLobby_ServerState ELobbyServerState = ELobbyServerState_k_eLobbyServerState_Assign
const Default_CSODACLobby_MatchMode EDACMatchMode = EDACMatchMode_k_EDACMatchMode_Invalid
const Default_CSODACLobby_GameMode EDACGameMode = EDACGameMode_k_EDACGameMode_Invalid

func (m *CSODACLobby) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CSODACLobby) GetCompatibilityVersion() uint32 {
	if m != nil && m.CompatibilityVersion != nil {
		return *m.CompatibilityVersion
	}
	return 0
}

func (m *CSODACLobby) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CSODACLobby) GetDevIgnoreStagingFiles() bool {
	if m != nil && m.DevIgnoreStagingFiles != nil {
		return *m.DevIgnoreStagingFiles
	}
	return false
}

func (m *CSODACLobby) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CSODACLobby) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CSODACLobby) GetServerState() ELobbyServerState {
	if m != nil && m.ServerState != nil {
		return *m.ServerState
	}
	return Default_CSODACLobby_ServerState
}

func (m *CSODACLobby) GetMatchMode() EDACMatchMode {
	if m != nil && m.MatchMode != nil {
		return *m.MatchMode
	}
	return Default_CSODACLobby_MatchMode
}

func (m *CSODACLobby) GetUdpConnectIp() uint32 {
	if m != nil && m.UdpConnectIp != nil {
		return *m.UdpConnectIp
	}
	return 0
}

func (m *CSODACLobby) GetUdpConnectPort() uint32 {
	if m != nil && m.UdpConnectPort != nil {
		return *m.UdpConnectPort
	}
	return 0
}

func (m *CSODACLobby) GetGameMode() EDACGameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CSODACLobby_GameMode
}

type CSODACParty struct {
	PartyId              *uint64                   `protobuf:"varint,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	Members              []*CSODACParty_Member     `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	Invites              []*CSODACParty_Invite     `protobuf:"bytes,3,rep,name=invites" json:"invites,omitempty"`
	InMatchMaking        *bool                     `protobuf:"varint,5,opt,name=in_match_making,json=inMatchMaking" json:"in_match_making,omitempty"`
	PartyPassword        *string                   `protobuf:"bytes,6,opt,name=party_password,json=partyPassword" json:"party_password,omitempty"`
	LeftMembers          []*CSODACParty_LeftMember `protobuf:"bytes,10,rep,name=left_members,json=leftMembers" json:"left_members,omitempty"`
	JoinCode             *uint64                   `protobuf:"varint,11,opt,name=join_code,json=joinCode" json:"join_code,omitempty"`
	BotDifficulty        *EDACBotDifficulty        `protobuf:"varint,12,opt,name=bot_difficulty,json=botDifficulty,enum=protocol.EDACBotDifficulty,def=0" json:"bot_difficulty,omitempty"`
	UseCustomModifier    *bool                     `protobuf:"varint,13,opt,name=use_custom_modifier,json=useCustomModifier" json:"use_custom_modifier,omitempty"`
	CustomModifier       *CMsgGameModifiers        `protobuf:"bytes,14,opt,name=custom_modifier,json=customModifier" json:"custom_modifier,omitempty"`
	Teams                []*CSODACParty_TeamInfo   `protobuf:"bytes,15,rep,name=teams" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CSODACParty) Reset()         { *m = CSODACParty{} }
func (m *CSODACParty) String() string { return proto.CompactTextString(m) }
func (*CSODACParty) ProtoMessage()    {}
func (*CSODACParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5}
}

func (m *CSODACParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACParty.Unmarshal(m, b)
}
func (m *CSODACParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACParty.Marshal(b, m, deterministic)
}
func (m *CSODACParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACParty.Merge(m, src)
}
func (m *CSODACParty) XXX_Size() int {
	return xxx_messageInfo_CSODACParty.Size(m)
}
func (m *CSODACParty) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACParty.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACParty proto.InternalMessageInfo

const Default_CSODACParty_BotDifficulty EDACBotDifficulty = EDACBotDifficulty_k_EDACBotDifficulty_None

func (m *CSODACParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CSODACParty) GetMembers() []*CSODACParty_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CSODACParty) GetInvites() []*CSODACParty_Invite {
	if m != nil {
		return m.Invites
	}
	return nil
}

func (m *CSODACParty) GetInMatchMaking() bool {
	if m != nil && m.InMatchMaking != nil {
		return *m.InMatchMaking
	}
	return false
}

func (m *CSODACParty) GetPartyPassword() string {
	if m != nil && m.PartyPassword != nil {
		return *m.PartyPassword
	}
	return ""
}

func (m *CSODACParty) GetLeftMembers() []*CSODACParty_LeftMember {
	if m != nil {
		return m.LeftMembers
	}
	return nil
}

func (m *CSODACParty) GetJoinCode() uint64 {
	if m != nil && m.JoinCode != nil {
		return *m.JoinCode
	}
	return 0
}

func (m *CSODACParty) GetBotDifficulty() EDACBotDifficulty {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return Default_CSODACParty_BotDifficulty
}

func (m *CSODACParty) GetUseCustomModifier() bool {
	if m != nil && m.UseCustomModifier != nil {
		return *m.UseCustomModifier
	}
	return false
}

func (m *CSODACParty) GetCustomModifier() *CMsgGameModifiers {
	if m != nil {
		return m.CustomModifier
	}
	return nil
}

func (m *CSODACParty) GetTeams() []*CSODACParty_TeamInfo {
	if m != nil {
		return m.Teams
	}
	return nil
}

type CSODACParty_Member struct {
	AccountId            *uint32                  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PersonaName          *string                  `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	RightsFlags          *uint32                  `protobuf:"varint,3,opt,name=rights_flags,json=rightsFlags" json:"rights_flags,omitempty"`
	IsReady              *bool                    `protobuf:"varint,4,opt,name=is_ready,json=isReady" json:"is_ready,omitempty"`
	PlayerType           *CSODACParty_EPlayerType `protobuf:"varint,5,opt,name=player_type,json=playerType,enum=protocol.CSODACParty_EPlayerType,def=0" json:"player_type,omitempty"`
	CompatibilityVersion *uint32                  `protobuf:"varint,6,opt,name=compatibility_version,json=compatibilityVersion" json:"compatibility_version,omitempty"`
	Platform             *EDACPlatform            `protobuf:"varint,7,opt,name=platform,enum=protocol.EDACPlatform,def=0" json:"platform,omitempty"`
	Team                 *uint32                  `protobuf:"varint,8,opt,name=team" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CSODACParty_Member) Reset()         { *m = CSODACParty_Member{} }
func (m *CSODACParty_Member) String() string { return proto.CompactTextString(m) }
func (*CSODACParty_Member) ProtoMessage()    {}
func (*CSODACParty_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 0}
}

func (m *CSODACParty_Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACParty_Member.Unmarshal(m, b)
}
func (m *CSODACParty_Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACParty_Member.Marshal(b, m, deterministic)
}
func (m *CSODACParty_Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACParty_Member.Merge(m, src)
}
func (m *CSODACParty_Member) XXX_Size() int {
	return xxx_messageInfo_CSODACParty_Member.Size(m)
}
func (m *CSODACParty_Member) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACParty_Member.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACParty_Member proto.InternalMessageInfo

const Default_CSODACParty_Member_PlayerType CSODACParty_EPlayerType = CSODACParty_k_ePlayerType_Player
const Default_CSODACParty_Member_Platform EDACPlatform = EDACPlatform_k_eDACPlatform_None

func (m *CSODACParty_Member) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODACParty_Member) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CSODACParty_Member) GetRightsFlags() uint32 {
	if m != nil && m.RightsFlags != nil {
		return *m.RightsFlags
	}
	return 0
}

func (m *CSODACParty_Member) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

func (m *CSODACParty_Member) GetPlayerType() CSODACParty_EPlayerType {
	if m != nil && m.PlayerType != nil {
		return *m.PlayerType
	}
	return Default_CSODACParty_Member_PlayerType
}

func (m *CSODACParty_Member) GetCompatibilityVersion() uint32 {
	if m != nil && m.CompatibilityVersion != nil {
		return *m.CompatibilityVersion
	}
	return 0
}

func (m *CSODACParty_Member) GetPlatform() EDACPlatform {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return Default_CSODACParty_Member_Platform
}

func (m *CSODACParty_Member) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

type CSODACParty_LeftMember struct {
	AccountId            *uint32                  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	RightsFlags          *uint32                  `protobuf:"varint,2,opt,name=rights_flags,json=rightsFlags" json:"rights_flags,omitempty"`
	PlayerType           *CSODACParty_EPlayerType `protobuf:"varint,3,opt,name=player_type,json=playerType,enum=protocol.CSODACParty_EPlayerType,def=0" json:"player_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CSODACParty_LeftMember) Reset()         { *m = CSODACParty_LeftMember{} }
func (m *CSODACParty_LeftMember) String() string { return proto.CompactTextString(m) }
func (*CSODACParty_LeftMember) ProtoMessage()    {}
func (*CSODACParty_LeftMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 1}
}

func (m *CSODACParty_LeftMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACParty_LeftMember.Unmarshal(m, b)
}
func (m *CSODACParty_LeftMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACParty_LeftMember.Marshal(b, m, deterministic)
}
func (m *CSODACParty_LeftMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACParty_LeftMember.Merge(m, src)
}
func (m *CSODACParty_LeftMember) XXX_Size() int {
	return xxx_messageInfo_CSODACParty_LeftMember.Size(m)
}
func (m *CSODACParty_LeftMember) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACParty_LeftMember.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACParty_LeftMember proto.InternalMessageInfo

const Default_CSODACParty_LeftMember_PlayerType CSODACParty_EPlayerType = CSODACParty_k_ePlayerType_Player

func (m *CSODACParty_LeftMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODACParty_LeftMember) GetRightsFlags() uint32 {
	if m != nil && m.RightsFlags != nil {
		return *m.RightsFlags
	}
	return 0
}

func (m *CSODACParty_LeftMember) GetPlayerType() CSODACParty_EPlayerType {
	if m != nil && m.PlayerType != nil {
		return *m.PlayerType
	}
	return Default_CSODACParty_LeftMember_PlayerType
}

type CSODACParty_Invite struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PersonaName          *string  `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	InvitedBy            *uint32  `protobuf:"varint,3,opt,name=invited_by,json=invitedBy" json:"invited_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODACParty_Invite) Reset()         { *m = CSODACParty_Invite{} }
func (m *CSODACParty_Invite) String() string { return proto.CompactTextString(m) }
func (*CSODACParty_Invite) ProtoMessage()    {}
func (*CSODACParty_Invite) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 2}
}

func (m *CSODACParty_Invite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACParty_Invite.Unmarshal(m, b)
}
func (m *CSODACParty_Invite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACParty_Invite.Marshal(b, m, deterministic)
}
func (m *CSODACParty_Invite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACParty_Invite.Merge(m, src)
}
func (m *CSODACParty_Invite) XXX_Size() int {
	return xxx_messageInfo_CSODACParty_Invite.Size(m)
}
func (m *CSODACParty_Invite) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACParty_Invite.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACParty_Invite proto.InternalMessageInfo

func (m *CSODACParty_Invite) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSODACParty_Invite) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CSODACParty_Invite) GetInvitedBy() uint32 {
	if m != nil && m.InvitedBy != nil {
		return *m.InvitedBy
	}
	return 0
}

type CSODACParty_TeamInfo struct {
	AccountIds           []uint32 `protobuf:"varint,1,rep,packed,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	TeamName             *string  `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	FirstPlayed          *uint32  `protobuf:"varint,3,opt,name=first_played,json=firstPlayed" json:"first_played,omitempty"`
	GamesPlayed          *uint32  `protobuf:"varint,4,opt,name=games_played,json=gamesPlayed" json:"games_played,omitempty"`
	NumFirstPlace        *uint32  `protobuf:"varint,6,opt,name=num_first_place,json=numFirstPlace" json:"num_first_place,omitempty"`
	NumTopThree          *uint32  `protobuf:"varint,7,opt,name=num_top_three,json=numTopThree" json:"num_top_three,omitempty"`
	MmrLevel             *uint32  `protobuf:"varint,8,opt,name=mmr_level,json=mmrLevel" json:"mmr_level,omitempty"`
	MmrLevelProgress     *uint32  `protobuf:"varint,9,opt,name=mmr_level_progress,json=mmrLevelProgress" json:"mmr_level_progress,omitempty"`
	MmrLevelScore        *uint32  `protobuf:"varint,10,opt,name=mmr_level_score,json=mmrLevelScore" json:"mmr_level_score,omitempty"`
	Flags                *uint32  `protobuf:"varint,11,opt,name=flags" json:"flags,omitempty"`
	LeaderboardPlace     *uint32  `protobuf:"varint,12,opt,name=leaderboard_place,json=leaderboardPlace" json:"leaderboard_place,omitempty"`
	GamesToUnlockRename  *uint32  `protobuf:"varint,13,opt,name=games_to_unlock_rename,json=gamesToUnlockRename" json:"games_to_unlock_rename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSODACParty_TeamInfo) Reset()         { *m = CSODACParty_TeamInfo{} }
func (m *CSODACParty_TeamInfo) String() string { return proto.CompactTextString(m) }
func (*CSODACParty_TeamInfo) ProtoMessage()    {}
func (*CSODACParty_TeamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{5, 3}
}

func (m *CSODACParty_TeamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSODACParty_TeamInfo.Unmarshal(m, b)
}
func (m *CSODACParty_TeamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSODACParty_TeamInfo.Marshal(b, m, deterministic)
}
func (m *CSODACParty_TeamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSODACParty_TeamInfo.Merge(m, src)
}
func (m *CSODACParty_TeamInfo) XXX_Size() int {
	return xxx_messageInfo_CSODACParty_TeamInfo.Size(m)
}
func (m *CSODACParty_TeamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CSODACParty_TeamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CSODACParty_TeamInfo proto.InternalMessageInfo

func (m *CSODACParty_TeamInfo) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CSODACParty_TeamInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CSODACParty_TeamInfo) GetFirstPlayed() uint32 {
	if m != nil && m.FirstPlayed != nil {
		return *m.FirstPlayed
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetGamesPlayed() uint32 {
	if m != nil && m.GamesPlayed != nil {
		return *m.GamesPlayed
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetNumFirstPlace() uint32 {
	if m != nil && m.NumFirstPlace != nil {
		return *m.NumFirstPlace
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetNumTopThree() uint32 {
	if m != nil && m.NumTopThree != nil {
		return *m.NumTopThree
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetMmrLevel() uint32 {
	if m != nil && m.MmrLevel != nil {
		return *m.MmrLevel
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetMmrLevelProgress() uint32 {
	if m != nil && m.MmrLevelProgress != nil {
		return *m.MmrLevelProgress
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetMmrLevelScore() uint32 {
	if m != nil && m.MmrLevelScore != nil {
		return *m.MmrLevelScore
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetLeaderboardPlace() uint32 {
	if m != nil && m.LeaderboardPlace != nil {
		return *m.LeaderboardPlace
	}
	return 0
}

func (m *CSODACParty_TeamInfo) GetGamesToUnlockRename() uint32 {
	if m != nil && m.GamesToUnlockRename != nil {
		return *m.GamesToUnlockRename
	}
	return 0
}

type CSOAccountSyncStorage struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Id                   *uint32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Value                *uint32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSOAccountSyncStorage) Reset()         { *m = CSOAccountSyncStorage{} }
func (m *CSOAccountSyncStorage) String() string { return proto.CompactTextString(m) }
func (*CSOAccountSyncStorage) ProtoMessage()    {}
func (*CSOAccountSyncStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{6}
}

func (m *CSOAccountSyncStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSOAccountSyncStorage.Unmarshal(m, b)
}
func (m *CSOAccountSyncStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSOAccountSyncStorage.Marshal(b, m, deterministic)
}
func (m *CSOAccountSyncStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSOAccountSyncStorage.Merge(m, src)
}
func (m *CSOAccountSyncStorage) XXX_Size() int {
	return xxx_messageInfo_CSOAccountSyncStorage.Size(m)
}
func (m *CSOAccountSyncStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_CSOAccountSyncStorage.DiscardUnknown(m)
}

var xxx_messageInfo_CSOAccountSyncStorage proto.InternalMessageInfo

func (m *CSOAccountSyncStorage) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOAccountSyncStorage) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CSOAccountSyncStorage) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CSOGameAccountClient struct {
	AccountId                    *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MmrLevel                     *uint32  `protobuf:"varint,2,opt,name=mmr_level,json=mmrLevel" json:"mmr_level,omitempty"`
	MmrLeaderboard               *uint32  `protobuf:"varint,3,opt,name=mmr_leaderboard,json=mmrLeaderboard" json:"mmr_leaderboard,omitempty"`
	Flags                        *uint64  `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
	UnlockRankedProgress         *uint32  `protobuf:"varint,5,opt,name=unlock_ranked_progress,json=unlockRankedProgress" json:"unlock_ranked_progress,omitempty"`
	MmrLevelPartialProgress      *float32 `protobuf:"fixed32,6,opt,name=mmr_level_partial_progress,json=mmrLevelPartialProgress" json:"mmr_level_partial_progress,omitempty"`
	MmrLevelScore                *uint32  `protobuf:"varint,8,opt,name=mmr_level_score,json=mmrLevelScore" json:"mmr_level_score,omitempty"`
	MmBanTimeStamp               *uint32  `protobuf:"varint,9,opt,name=mm_ban_time_stamp,json=mmBanTimeStamp" json:"mm_ban_time_stamp,omitempty"`
	MmBanReason                  *uint32  `protobuf:"varint,10,opt,name=mm_ban_reason,json=mmBanReason" json:"mm_ban_reason,omitempty"`
	MmRankedBanTimeStamp         *uint32  `protobuf:"varint,11,opt,name=mm_ranked_ban_time_stamp,json=mmRankedBanTimeStamp" json:"mm_ranked_ban_time_stamp,omitempty"`
	MmRankedBanReason            *uint32  `protobuf:"varint,12,opt,name=mm_ranked_ban_reason,json=mmRankedBanReason" json:"mm_ranked_ban_reason,omitempty"`
	Credits                      *uint32  `protobuf:"varint,13,opt,name=credits" json:"credits,omitempty"`
	TurboMmrLevel                *uint32  `protobuf:"varint,14,opt,name=turbo_mmr_level,json=turboMmrLevel" json:"turbo_mmr_level,omitempty"`
	TurboMmrLeaderboard          *uint32  `protobuf:"varint,15,opt,name=turbo_mmr_leaderboard,json=turboMmrLeaderboard" json:"turbo_mmr_leaderboard,omitempty"`
	TurboMmrLevelPartialProgress *float32 `protobuf:"fixed32,16,opt,name=turbo_mmr_level_partial_progress,json=turboMmrLevelPartialProgress" json:"turbo_mmr_level_partial_progress,omitempty"`
	TurboMmrLevelScore           *uint32  `protobuf:"varint,17,opt,name=turbo_mmr_level_score,json=turboMmrLevelScore" json:"turbo_mmr_level_score,omitempty"`
	Wins_1St                     *uint32  `protobuf:"varint,18,opt,name=wins_1st,json=wins1st" json:"wins_1st,omitempty"`
	Wins_2Nd                     *uint32  `protobuf:"varint,19,opt,name=wins_2nd,json=wins2nd" json:"wins_2nd,omitempty"`
	Wins_3Rd                     *uint32  `protobuf:"varint,20,opt,name=wins_3rd,json=wins3rd" json:"wins_3rd,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *CSOGameAccountClient) Reset()         { *m = CSOGameAccountClient{} }
func (m *CSOGameAccountClient) String() string { return proto.CompactTextString(m) }
func (*CSOGameAccountClient) ProtoMessage()    {}
func (*CSOGameAccountClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{7}
}

func (m *CSOGameAccountClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSOGameAccountClient.Unmarshal(m, b)
}
func (m *CSOGameAccountClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSOGameAccountClient.Marshal(b, m, deterministic)
}
func (m *CSOGameAccountClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSOGameAccountClient.Merge(m, src)
}
func (m *CSOGameAccountClient) XXX_Size() int {
	return xxx_messageInfo_CSOGameAccountClient.Size(m)
}
func (m *CSOGameAccountClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CSOGameAccountClient.DiscardUnknown(m)
}

var xxx_messageInfo_CSOGameAccountClient proto.InternalMessageInfo

func (m *CSOGameAccountClient) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmrLevel() uint32 {
	if m != nil && m.MmrLevel != nil {
		return *m.MmrLevel
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmrLeaderboard() uint32 {
	if m != nil && m.MmrLeaderboard != nil {
		return *m.MmrLeaderboard
	}
	return 0
}

func (m *CSOGameAccountClient) GetFlags() uint64 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSOGameAccountClient) GetUnlockRankedProgress() uint32 {
	if m != nil && m.UnlockRankedProgress != nil {
		return *m.UnlockRankedProgress
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmrLevelPartialProgress() float32 {
	if m != nil && m.MmrLevelPartialProgress != nil {
		return *m.MmrLevelPartialProgress
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmrLevelScore() uint32 {
	if m != nil && m.MmrLevelScore != nil {
		return *m.MmrLevelScore
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmBanTimeStamp() uint32 {
	if m != nil && m.MmBanTimeStamp != nil {
		return *m.MmBanTimeStamp
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmBanReason() uint32 {
	if m != nil && m.MmBanReason != nil {
		return *m.MmBanReason
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmRankedBanTimeStamp() uint32 {
	if m != nil && m.MmRankedBanTimeStamp != nil {
		return *m.MmRankedBanTimeStamp
	}
	return 0
}

func (m *CSOGameAccountClient) GetMmRankedBanReason() uint32 {
	if m != nil && m.MmRankedBanReason != nil {
		return *m.MmRankedBanReason
	}
	return 0
}

func (m *CSOGameAccountClient) GetCredits() uint32 {
	if m != nil && m.Credits != nil {
		return *m.Credits
	}
	return 0
}

func (m *CSOGameAccountClient) GetTurboMmrLevel() uint32 {
	if m != nil && m.TurboMmrLevel != nil {
		return *m.TurboMmrLevel
	}
	return 0
}

func (m *CSOGameAccountClient) GetTurboMmrLeaderboard() uint32 {
	if m != nil && m.TurboMmrLeaderboard != nil {
		return *m.TurboMmrLeaderboard
	}
	return 0
}

func (m *CSOGameAccountClient) GetTurboMmrLevelPartialProgress() float32 {
	if m != nil && m.TurboMmrLevelPartialProgress != nil {
		return *m.TurboMmrLevelPartialProgress
	}
	return 0
}

func (m *CSOGameAccountClient) GetTurboMmrLevelScore() uint32 {
	if m != nil && m.TurboMmrLevelScore != nil {
		return *m.TurboMmrLevelScore
	}
	return 0
}

func (m *CSOGameAccountClient) GetWins_1St() uint32 {
	if m != nil && m.Wins_1St != nil {
		return *m.Wins_1St
	}
	return 0
}

func (m *CSOGameAccountClient) GetWins_2Nd() uint32 {
	if m != nil && m.Wins_2Nd != nil {
		return *m.Wins_2Nd
	}
	return 0
}

func (m *CSOGameAccountClient) GetWins_3Rd() uint32 {
	if m != nil && m.Wins_3Rd != nil {
		return *m.Wins_3Rd
	}
	return 0
}

type CMsgStreetfightSettings struct {
	UnderlordId          *uint32  `protobuf:"varint,1,opt,name=underlord_id,json=underlordId" json:"underlord_id,omitempty"`
	StreetfightId        *uint32  `protobuf:"varint,2,opt,name=streetfight_id,json=streetfightId" json:"streetfight_id,omitempty"`
	ItemIdsForPlayer     []uint32 `protobuf:"varint,3,rep,name=item_ids_for_player,json=itemIdsForPlayer" json:"item_ids_for_player,omitempty"`
	PrestigeLevel        *uint32  `protobuf:"varint,4,opt,name=prestige_level,json=prestigeLevel" json:"prestige_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgStreetfightSettings) Reset()         { *m = CMsgStreetfightSettings{} }
func (m *CMsgStreetfightSettings) String() string { return proto.CompactTextString(m) }
func (*CMsgStreetfightSettings) ProtoMessage()    {}
func (*CMsgStreetfightSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{8}
}

func (m *CMsgStreetfightSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStreetfightSettings.Unmarshal(m, b)
}
func (m *CMsgStreetfightSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStreetfightSettings.Marshal(b, m, deterministic)
}
func (m *CMsgStreetfightSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStreetfightSettings.Merge(m, src)
}
func (m *CMsgStreetfightSettings) XXX_Size() int {
	return xxx_messageInfo_CMsgStreetfightSettings.Size(m)
}
func (m *CMsgStreetfightSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStreetfightSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStreetfightSettings proto.InternalMessageInfo

func (m *CMsgStreetfightSettings) GetUnderlordId() uint32 {
	if m != nil && m.UnderlordId != nil {
		return *m.UnderlordId
	}
	return 0
}

func (m *CMsgStreetfightSettings) GetStreetfightId() uint32 {
	if m != nil && m.StreetfightId != nil {
		return *m.StreetfightId
	}
	return 0
}

func (m *CMsgStreetfightSettings) GetItemIdsForPlayer() []uint32 {
	if m != nil {
		return m.ItemIdsForPlayer
	}
	return nil
}

func (m *CMsgStreetfightSettings) GetPrestigeLevel() uint32 {
	if m != nil && m.PrestigeLevel != nil {
		return *m.PrestigeLevel
	}
	return 0
}

type CMsgGameModeSettings struct {
	// Types that are valid to be assigned to Settings:
	//	*CMsgGameModeSettings_PuzzleId
	//	*CMsgGameModeSettings_TutorialPhase
	//	*CMsgGameModeSettings_SandboxShareCode
	//	*CMsgGameModeSettings_StreetfightSettings
	Settings             isCMsgGameModeSettings_Settings `protobuf_oneof:"settings"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgGameModeSettings) Reset()         { *m = CMsgGameModeSettings{} }
func (m *CMsgGameModeSettings) String() string { return proto.CompactTextString(m) }
func (*CMsgGameModeSettings) ProtoMessage()    {}
func (*CMsgGameModeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{9}
}

func (m *CMsgGameModeSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGameModeSettings.Unmarshal(m, b)
}
func (m *CMsgGameModeSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGameModeSettings.Marshal(b, m, deterministic)
}
func (m *CMsgGameModeSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGameModeSettings.Merge(m, src)
}
func (m *CMsgGameModeSettings) XXX_Size() int {
	return xxx_messageInfo_CMsgGameModeSettings.Size(m)
}
func (m *CMsgGameModeSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGameModeSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGameModeSettings proto.InternalMessageInfo

type isCMsgGameModeSettings_Settings interface {
	isCMsgGameModeSettings_Settings()
}

type CMsgGameModeSettings_PuzzleId struct {
	PuzzleId uint32 `protobuf:"varint,1,opt,name=puzzle_id,json=puzzleId,oneof"`
}

type CMsgGameModeSettings_TutorialPhase struct {
	TutorialPhase uint32 `protobuf:"varint,2,opt,name=tutorial_phase,json=tutorialPhase,oneof"`
}

type CMsgGameModeSettings_SandboxShareCode struct {
	SandboxShareCode string `protobuf:"bytes,3,opt,name=sandbox_share_code,json=sandboxShareCode,oneof"`
}

type CMsgGameModeSettings_StreetfightSettings struct {
	StreetfightSettings *CMsgStreetfightSettings `protobuf:"bytes,4,opt,name=streetfight_settings,json=streetfightSettings,oneof"`
}

func (*CMsgGameModeSettings_PuzzleId) isCMsgGameModeSettings_Settings() {}

func (*CMsgGameModeSettings_TutorialPhase) isCMsgGameModeSettings_Settings() {}

func (*CMsgGameModeSettings_SandboxShareCode) isCMsgGameModeSettings_Settings() {}

func (*CMsgGameModeSettings_StreetfightSettings) isCMsgGameModeSettings_Settings() {}

func (m *CMsgGameModeSettings) GetSettings() isCMsgGameModeSettings_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *CMsgGameModeSettings) GetPuzzleId() uint32 {
	if x, ok := m.GetSettings().(*CMsgGameModeSettings_PuzzleId); ok {
		return x.PuzzleId
	}
	return 0
}

func (m *CMsgGameModeSettings) GetTutorialPhase() uint32 {
	if x, ok := m.GetSettings().(*CMsgGameModeSettings_TutorialPhase); ok {
		return x.TutorialPhase
	}
	return 0
}

func (m *CMsgGameModeSettings) GetSandboxShareCode() string {
	if x, ok := m.GetSettings().(*CMsgGameModeSettings_SandboxShareCode); ok {
		return x.SandboxShareCode
	}
	return ""
}

func (m *CMsgGameModeSettings) GetStreetfightSettings() *CMsgStreetfightSettings {
	if x, ok := m.GetSettings().(*CMsgGameModeSettings_StreetfightSettings); ok {
		return x.StreetfightSettings
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CMsgGameModeSettings) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CMsgGameModeSettings_PuzzleId)(nil),
		(*CMsgGameModeSettings_TutorialPhase)(nil),
		(*CMsgGameModeSettings_SandboxShareCode)(nil),
		(*CMsgGameModeSettings_StreetfightSettings)(nil),
	}
}

type CMsgStartFindingMatchInfo struct {
	ClientVersion        *uint32               `protobuf:"varint,2,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	MatchMode            *EDACMatchMode        `protobuf:"varint,3,opt,name=match_mode,json=matchMode,enum=protocol.EDACMatchMode,def=0" json:"match_mode,omitempty"`
	Platform             *EDACPlatform         `protobuf:"varint,4,opt,name=platform,enum=protocol.EDACPlatform,def=0" json:"platform,omitempty"`
	BotDifficulty        *EDACBotDifficulty    `protobuf:"varint,5,opt,name=bot_difficulty,json=botDifficulty,enum=protocol.EDACBotDifficulty,def=0" json:"bot_difficulty,omitempty"`
	GameMode             *EDACGameMode         `protobuf:"varint,6,opt,name=game_mode,json=gameMode,enum=protocol.EDACGameMode,def=0" json:"game_mode,omitempty"`
	RegionMode           *EDACRegionMode       `protobuf:"varint,8,opt,name=region_mode,json=regionMode,enum=protocol.EDACRegionMode,def=0" json:"region_mode,omitempty"`
	GameModeSettings     *CMsgGameModeSettings `protobuf:"bytes,9,opt,name=game_mode_settings,json=gameModeSettings" json:"game_mode_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgStartFindingMatchInfo) Reset()         { *m = CMsgStartFindingMatchInfo{} }
func (m *CMsgStartFindingMatchInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgStartFindingMatchInfo) ProtoMessage()    {}
func (*CMsgStartFindingMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{10}
}

func (m *CMsgStartFindingMatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgStartFindingMatchInfo.Unmarshal(m, b)
}
func (m *CMsgStartFindingMatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgStartFindingMatchInfo.Marshal(b, m, deterministic)
}
func (m *CMsgStartFindingMatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgStartFindingMatchInfo.Merge(m, src)
}
func (m *CMsgStartFindingMatchInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgStartFindingMatchInfo.Size(m)
}
func (m *CMsgStartFindingMatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgStartFindingMatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgStartFindingMatchInfo proto.InternalMessageInfo

const Default_CMsgStartFindingMatchInfo_MatchMode EDACMatchMode = EDACMatchMode_k_EDACMatchMode_Invalid
const Default_CMsgStartFindingMatchInfo_Platform EDACPlatform = EDACPlatform_k_eDACPlatform_None
const Default_CMsgStartFindingMatchInfo_BotDifficulty EDACBotDifficulty = EDACBotDifficulty_k_EDACBotDifficulty_None
const Default_CMsgStartFindingMatchInfo_GameMode EDACGameMode = EDACGameMode_k_EDACGameMode_Invalid
const Default_CMsgStartFindingMatchInfo_RegionMode EDACRegionMode = EDACRegionMode_k_EDACRegionMode_ROW

func (m *CMsgStartFindingMatchInfo) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgStartFindingMatchInfo) GetMatchMode() EDACMatchMode {
	if m != nil && m.MatchMode != nil {
		return *m.MatchMode
	}
	return Default_CMsgStartFindingMatchInfo_MatchMode
}

func (m *CMsgStartFindingMatchInfo) GetPlatform() EDACPlatform {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return Default_CMsgStartFindingMatchInfo_Platform
}

func (m *CMsgStartFindingMatchInfo) GetBotDifficulty() EDACBotDifficulty {
	if m != nil && m.BotDifficulty != nil {
		return *m.BotDifficulty
	}
	return Default_CMsgStartFindingMatchInfo_BotDifficulty
}

func (m *CMsgStartFindingMatchInfo) GetGameMode() EDACGameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgStartFindingMatchInfo_GameMode
}

func (m *CMsgStartFindingMatchInfo) GetRegionMode() EDACRegionMode {
	if m != nil && m.RegionMode != nil {
		return *m.RegionMode
	}
	return Default_CMsgStartFindingMatchInfo_RegionMode
}

func (m *CMsgStartFindingMatchInfo) GetGameModeSettings() *CMsgGameModeSettings {
	if m != nil {
		return m.GameModeSettings
	}
	return nil
}

type CMsgAnyToGCReportAsserts struct {
	Version              *uint32                                   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Asserts              []*CMsgAnyToGCReportAsserts_TrackedAssert `protobuf:"bytes,2,rep,name=asserts" json:"asserts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CMsgAnyToGCReportAsserts) Reset()         { *m = CMsgAnyToGCReportAsserts{} }
func (m *CMsgAnyToGCReportAsserts) String() string { return proto.CompactTextString(m) }
func (*CMsgAnyToGCReportAsserts) ProtoMessage()    {}
func (*CMsgAnyToGCReportAsserts) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{11}
}

func (m *CMsgAnyToGCReportAsserts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts.Unmarshal(m, b)
}
func (m *CMsgAnyToGCReportAsserts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts.Marshal(b, m, deterministic)
}
func (m *CMsgAnyToGCReportAsserts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgAnyToGCReportAsserts.Merge(m, src)
}
func (m *CMsgAnyToGCReportAsserts) XXX_Size() int {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts.Size(m)
}
func (m *CMsgAnyToGCReportAsserts) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgAnyToGCReportAsserts.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgAnyToGCReportAsserts proto.InternalMessageInfo

func (m *CMsgAnyToGCReportAsserts) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgAnyToGCReportAsserts) GetAsserts() []*CMsgAnyToGCReportAsserts_TrackedAssert {
	if m != nil {
		return m.Asserts
	}
	return nil
}

type CMsgAnyToGCReportAsserts_TrackedAssert struct {
	Filename             *string  `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	LineNumber           *uint32  `protobuf:"varint,2,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	SampleMsg            *string  `protobuf:"bytes,3,opt,name=sample_msg,json=sampleMsg" json:"sample_msg,omitempty"`
	SampleStack          *string  `protobuf:"bytes,4,opt,name=sample_stack,json=sampleStack" json:"sample_stack,omitempty"`
	TimesFired           *uint32  `protobuf:"varint,5,opt,name=times_fired,json=timesFired" json:"times_fired,omitempty"`
	FunctionName         *string  `protobuf:"bytes,6,opt,name=function_name,json=functionName" json:"function_name,omitempty"`
	Condition            *string  `protobuf:"bytes,7,opt,name=condition" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) Reset() {
	*m = CMsgAnyToGCReportAsserts_TrackedAssert{}
}
func (m *CMsgAnyToGCReportAsserts_TrackedAssert) String() string { return proto.CompactTextString(m) }
func (*CMsgAnyToGCReportAsserts_TrackedAssert) ProtoMessage()    {}
func (*CMsgAnyToGCReportAsserts_TrackedAssert) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{11, 0}
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert.Unmarshal(m, b)
}
func (m *CMsgAnyToGCReportAsserts_TrackedAssert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert.Marshal(b, m, deterministic)
}
func (m *CMsgAnyToGCReportAsserts_TrackedAssert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert.Merge(m, src)
}
func (m *CMsgAnyToGCReportAsserts_TrackedAssert) XXX_Size() int {
	return xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert.Size(m)
}
func (m *CMsgAnyToGCReportAsserts_TrackedAssert) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgAnyToGCReportAsserts_TrackedAssert proto.InternalMessageInfo

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetLineNumber() uint32 {
	if m != nil && m.LineNumber != nil {
		return *m.LineNumber
	}
	return 0
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetSampleMsg() string {
	if m != nil && m.SampleMsg != nil {
		return *m.SampleMsg
	}
	return ""
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetSampleStack() string {
	if m != nil && m.SampleStack != nil {
		return *m.SampleStack
	}
	return ""
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetTimesFired() uint32 {
	if m != nil && m.TimesFired != nil {
		return *m.TimesFired
	}
	return 0
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetFunctionName() string {
	if m != nil && m.FunctionName != nil {
		return *m.FunctionName
	}
	return ""
}

func (m *CMsgAnyToGCReportAsserts_TrackedAssert) GetCondition() string {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return ""
}

type CMsgAnyToGCReportAssertsResponse struct {
	Success              *bool    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgAnyToGCReportAssertsResponse) Reset()         { *m = CMsgAnyToGCReportAssertsResponse{} }
func (m *CMsgAnyToGCReportAssertsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgAnyToGCReportAssertsResponse) ProtoMessage()    {}
func (*CMsgAnyToGCReportAssertsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{12}
}

func (m *CMsgAnyToGCReportAssertsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgAnyToGCReportAssertsResponse.Unmarshal(m, b)
}
func (m *CMsgAnyToGCReportAssertsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgAnyToGCReportAssertsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgAnyToGCReportAssertsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgAnyToGCReportAssertsResponse.Merge(m, src)
}
func (m *CMsgAnyToGCReportAssertsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgAnyToGCReportAssertsResponse.Size(m)
}
func (m *CMsgAnyToGCReportAssertsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgAnyToGCReportAssertsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgAnyToGCReportAssertsResponse proto.InternalMessageInfo

func (m *CMsgAnyToGCReportAssertsResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CMsgHistogram struct {
	HistogramBuckets     []*CMsgHistogram_HistogramBucket `protobuf:"bytes,1,rep,name=histogram_buckets,json=histogramBuckets" json:"histogram_buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgHistogram) Reset()         { *m = CMsgHistogram{} }
func (m *CMsgHistogram) String() string { return proto.CompactTextString(m) }
func (*CMsgHistogram) ProtoMessage()    {}
func (*CMsgHistogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{13}
}

func (m *CMsgHistogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHistogram.Unmarshal(m, b)
}
func (m *CMsgHistogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHistogram.Marshal(b, m, deterministic)
}
func (m *CMsgHistogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHistogram.Merge(m, src)
}
func (m *CMsgHistogram) XXX_Size() int {
	return xxx_messageInfo_CMsgHistogram.Size(m)
}
func (m *CMsgHistogram) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHistogram.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHistogram proto.InternalMessageInfo

func (m *CMsgHistogram) GetHistogramBuckets() []*CMsgHistogram_HistogramBucket {
	if m != nil {
		return m.HistogramBuckets
	}
	return nil
}

type CMsgHistogram_HistogramBucket struct {
	Value                *uint32  `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Count                *uint32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgHistogram_HistogramBucket) Reset()         { *m = CMsgHistogram_HistogramBucket{} }
func (m *CMsgHistogram_HistogramBucket) String() string { return proto.CompactTextString(m) }
func (*CMsgHistogram_HistogramBucket) ProtoMessage()    {}
func (*CMsgHistogram_HistogramBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{13, 0}
}

func (m *CMsgHistogram_HistogramBucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHistogram_HistogramBucket.Unmarshal(m, b)
}
func (m *CMsgHistogram_HistogramBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHistogram_HistogramBucket.Marshal(b, m, deterministic)
}
func (m *CMsgHistogram_HistogramBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHistogram_HistogramBucket.Merge(m, src)
}
func (m *CMsgHistogram_HistogramBucket) XXX_Size() int {
	return xxx_messageInfo_CMsgHistogram_HistogramBucket.Size(m)
}
func (m *CMsgHistogram_HistogramBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHistogram_HistogramBucket.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHistogram_HistogramBucket proto.InternalMessageInfo

func (m *CMsgHistogram_HistogramBucket) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CMsgHistogram_HistogramBucket) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type CMsgPuzzleLeaderboardHistogram struct {
	PuzzleId             *uint32        `protobuf:"varint,1,opt,name=puzzle_id,json=puzzleId" json:"puzzle_id,omitempty"`
	LeaderboardType      *uint32        `protobuf:"varint,2,opt,name=leaderboard_type,json=leaderboardType" json:"leaderboard_type,omitempty"`
	Histogram            *CMsgHistogram `protobuf:"bytes,3,opt,name=histogram" json:"histogram,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CMsgPuzzleLeaderboardHistogram) Reset()         { *m = CMsgPuzzleLeaderboardHistogram{} }
func (m *CMsgPuzzleLeaderboardHistogram) String() string { return proto.CompactTextString(m) }
func (*CMsgPuzzleLeaderboardHistogram) ProtoMessage()    {}
func (*CMsgPuzzleLeaderboardHistogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{14}
}

func (m *CMsgPuzzleLeaderboardHistogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogram.Unmarshal(m, b)
}
func (m *CMsgPuzzleLeaderboardHistogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogram.Marshal(b, m, deterministic)
}
func (m *CMsgPuzzleLeaderboardHistogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPuzzleLeaderboardHistogram.Merge(m, src)
}
func (m *CMsgPuzzleLeaderboardHistogram) XXX_Size() int {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogram.Size(m)
}
func (m *CMsgPuzzleLeaderboardHistogram) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPuzzleLeaderboardHistogram.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPuzzleLeaderboardHistogram proto.InternalMessageInfo

func (m *CMsgPuzzleLeaderboardHistogram) GetPuzzleId() uint32 {
	if m != nil && m.PuzzleId != nil {
		return *m.PuzzleId
	}
	return 0
}

func (m *CMsgPuzzleLeaderboardHistogram) GetLeaderboardType() uint32 {
	if m != nil && m.LeaderboardType != nil {
		return *m.LeaderboardType
	}
	return 0
}

func (m *CMsgPuzzleLeaderboardHistogram) GetHistogram() *CMsgHistogram {
	if m != nil {
		return m.Histogram
	}
	return nil
}

type CMsgPuzzleLeaderboardHistogramList struct {
	LeaderboardHistograms []*CMsgPuzzleLeaderboardHistogram `protobuf:"bytes,1,rep,name=leaderboard_histograms,json=leaderboardHistograms" json:"leaderboard_histograms,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                          `json:"-"`
	XXX_unrecognized      []byte                            `json:"-"`
	XXX_sizecache         int32                             `json:"-"`
}

func (m *CMsgPuzzleLeaderboardHistogramList) Reset()         { *m = CMsgPuzzleLeaderboardHistogramList{} }
func (m *CMsgPuzzleLeaderboardHistogramList) String() string { return proto.CompactTextString(m) }
func (*CMsgPuzzleLeaderboardHistogramList) ProtoMessage()    {}
func (*CMsgPuzzleLeaderboardHistogramList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ce59cd0086f1143, []int{15}
}

func (m *CMsgPuzzleLeaderboardHistogramList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList.Unmarshal(m, b)
}
func (m *CMsgPuzzleLeaderboardHistogramList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList.Marshal(b, m, deterministic)
}
func (m *CMsgPuzzleLeaderboardHistogramList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList.Merge(m, src)
}
func (m *CMsgPuzzleLeaderboardHistogramList) XXX_Size() int {
	return xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList.Size(m)
}
func (m *CMsgPuzzleLeaderboardHistogramList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPuzzleLeaderboardHistogramList proto.InternalMessageInfo

func (m *CMsgPuzzleLeaderboardHistogramList) GetLeaderboardHistograms() []*CMsgPuzzleLeaderboardHistogram {
	if m != nil {
		return m.LeaderboardHistograms
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.EGCDACCommonMessages", EGCDACCommonMessages_name, EGCDACCommonMessages_value)
	proto.RegisterEnum("protocol.EDACStoreID", EDACStoreID_name, EDACStoreID_value)
	proto.RegisterEnum("protocol.EDACRegionMode", EDACRegionMode_name, EDACRegionMode_value)
	proto.RegisterEnum("protocol.EDACMatchMode", EDACMatchMode_name, EDACMatchMode_value)
	proto.RegisterEnum("protocol.EDACGameMode", EDACGameMode_name, EDACGameMode_value)
	proto.RegisterEnum("protocol.EDACLobbyTeam", EDACLobbyTeam_name, EDACLobbyTeam_value)
	proto.RegisterEnum("protocol.EDACBotDifficulty", EDACBotDifficulty_name, EDACBotDifficulty_value)
	proto.RegisterEnum("protocol.EDACAIType", EDACAIType_name, EDACAIType_value)
	proto.RegisterEnum("protocol.EDACMatchState", EDACMatchState_name, EDACMatchState_value)
	proto.RegisterEnum("protocol.EDACPlayerState", EDACPlayerState_name, EDACPlayerState_value)
	proto.RegisterEnum("protocol.ELobbyServerState", ELobbyServerState_name, ELobbyServerState_value)
	proto.RegisterEnum("protocol.CSODACParty_EMemberRights", CSODACParty_EMemberRights_name, CSODACParty_EMemberRights_value)
	proto.RegisterEnum("protocol.CSODACParty_EPlayerType", CSODACParty_EPlayerType_name, CSODACParty_EPlayerType_value)
	proto.RegisterEnum("protocol.CSODACParty_ETeamFlags", CSODACParty_ETeamFlags_name, CSODACParty_ETeamFlags_value)
	proto.RegisterType((*CMsgGameModifiers)(nil), "protocol.CMsgGameModifiers")
	proto.RegisterType((*CMsgTeamInfo)(nil), "protocol.CMsgTeamInfo")
	proto.RegisterType((*CServerLobbyData_PlayerInfo)(nil), "protocol.CServerLobbyData_PlayerInfo")
	proto.RegisterType((*CServerLobbyData_PlayerInfo_LoadoutSlot)(nil), "protocol.CServerLobbyData_PlayerInfo.LoadoutSlot")
	proto.RegisterType((*CServerLobbyData_PlayerInfo_Currency)(nil), "protocol.CServerLobbyData_PlayerInfo.Currency")
	proto.RegisterType((*CServerLobbyData_PlayerInfo_Challenge)(nil), "protocol.CServerLobbyData_PlayerInfo.Challenge")
	proto.RegisterType((*CServerLobbyData_PlayerInfo_VirtualItem)(nil), "protocol.CServerLobbyData_PlayerInfo.VirtualItem")
	proto.RegisterType((*CServerLobbyData_PlayerInfo_Event)(nil), "protocol.CServerLobbyData_PlayerInfo.Event")
	proto.RegisterType((*CMsgRegionPingTimesClient)(nil), "protocol.CMsgRegionPingTimesClient")
	proto.RegisterType((*CSODACLobby)(nil), "protocol.CSODACLobby")
	proto.RegisterType((*CSODACParty)(nil), "protocol.CSODACParty")
	proto.RegisterType((*CSODACParty_Member)(nil), "protocol.CSODACParty.Member")
	proto.RegisterType((*CSODACParty_LeftMember)(nil), "protocol.CSODACParty.LeftMember")
	proto.RegisterType((*CSODACParty_Invite)(nil), "protocol.CSODACParty.Invite")
	proto.RegisterType((*CSODACParty_TeamInfo)(nil), "protocol.CSODACParty.TeamInfo")
	proto.RegisterType((*CSOAccountSyncStorage)(nil), "protocol.CSOAccountSyncStorage")
	proto.RegisterType((*CSOGameAccountClient)(nil), "protocol.CSOGameAccountClient")
	proto.RegisterType((*CMsgStreetfightSettings)(nil), "protocol.CMsgStreetfightSettings")
	proto.RegisterType((*CMsgGameModeSettings)(nil), "protocol.CMsgGameModeSettings")
	proto.RegisterType((*CMsgStartFindingMatchInfo)(nil), "protocol.CMsgStartFindingMatchInfo")
	proto.RegisterType((*CMsgAnyToGCReportAsserts)(nil), "protocol.CMsgAnyToGCReportAsserts")
	proto.RegisterType((*CMsgAnyToGCReportAsserts_TrackedAssert)(nil), "protocol.CMsgAnyToGCReportAsserts.TrackedAssert")
	proto.RegisterType((*CMsgAnyToGCReportAssertsResponse)(nil), "protocol.CMsgAnyToGCReportAssertsResponse")
	proto.RegisterType((*CMsgHistogram)(nil), "protocol.CMsgHistogram")
	proto.RegisterType((*CMsgHistogram_HistogramBucket)(nil), "protocol.CMsgHistogram.HistogramBucket")
	proto.RegisterType((*CMsgPuzzleLeaderboardHistogram)(nil), "protocol.CMsgPuzzleLeaderboardHistogram")
	proto.RegisterType((*CMsgPuzzleLeaderboardHistogramList)(nil), "protocol.CMsgPuzzleLeaderboardHistogramList")
}

func init() {
	proto.RegisterFile("dac_gcmessages_common.proto", fileDescriptor_9ce59cd0086f1143)
}

var fileDescriptor_9ce59cd0086f1143 = []byte{
	// 3619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0xcd, 0x73, 0x1c, 0x49,
	0x56, 0x57, 0xb5, 0xbe, 0xba, 0x5f, 0xab, 0xa5, 0x54, 0xea, 0xab, 0xdd, 0xf2, 0x87, 0xdc, 0x33,
	0xb6, 0x35, 0x9a, 0x19, 0x8d, 0x25, 0xd9, 0xb2, 0xc6, 0xc0, 0x41, 0x6a, 0x49, 0x76, 0xb3, 0x92,
	0xa5, 0xa8, 0x16, 0x03, 0x41, 0x6c, 0x44, 0x45, 0x76, 0x55, 0x76, 0xab, 0x50, 0x55, 0x65, 0x4f,
	0x65, 0xb6, 0xbc, 0xda, 0xd3, 0x5e, 0x88, 0xfd, 0x0b, 0x38, 0x70, 0xe2, 0x00, 0x6c, 0x10, 0x01,
	0xfc, 0x01, 0x04, 0x7b, 0x27, 0xe0, 0xc2, 0x8d, 0x80, 0x3f, 0x02, 0x0e, 0xcb, 0x2e, 0x10, 0x9c,
	0x88, 0xcc, 0xac, 0xcf, 0x56, 0x69, 0x6c, 0x62, 0xe6, 0x62, 0x2b, 0x7f, 0xbf, 0x57, 0xaf, 0x5e,
	0xbd, 0x8f, 0xcc, 0xf7, 0xb2, 0x61, 0xd5, 0x21, 0xb6, 0xd5, 0xb7, 0x7d, 0xca, 0x39, 0xe9, 0x53,
	0x6e, 0xd9, 0xcc, 0xf7, 0x59, 0xb0, 0x39, 0x08, 0x99, 0x60, 0xb8, 0xac, 0xfe, 0xb3, 0x99, 0xd7,
	0x58, 0xe0, 0x82, 0x12, 0x3f, 0x96, 0xd2, 0x74, 0x63, 0x89, 0xda, 0x2c, 0xc8, 0x3c, 0xac, 0xe1,
	0xe6, 0x02, 0xcc, 0xb7, 0x4e, 0x79, 0xff, 0x0d, 0xf1, 0xe9, 0x29, 0x73, 0xdc, 0x9e, 0x4b, 0x43,
	0xde, 0xfc, 0x17, 0x03, 0x66, 0x24, 0x7a, 0x41, 0x89, 0xdf, 0x0e, 0x7a, 0x0c, 0x3f, 0x07, 0xec,
	0x53, 0xbf, 0x4b, 0x43, 0x8b, 0xd8, 0x36, 0x1b, 0x06, 0xc2, 0x72, 0x1d, 0x5e, 0x37, 0xd6, 0xc6,
	0xd7, 0x6b, 0x07, 0x25, 0x64, 0x98, 0x48, 0xb3, 0xfb, 0x9a, 0x6c, 0x3b, 0x1c, 0xaf, 0x42, 0x45,
	0x1a, 0x61, 0x05, 0xc4, 0xa7, 0xf5, 0xd2, 0x9a, 0xb1, 0x5e, 0x31, 0xcb, 0x12, 0x78, 0x47, 0x7c,
	0x8a, 0x9f, 0xc2, 0x9c, 0xef, 0x87, 0x96, 0x47, 0xaf, 0xa9, 0x67, 0x71, 0x9b, 0x85, 0xb4, 0x3e,
	0xbe, 0x66, 0xac, 0xd7, 0xcc, 0x9a, 0xef, 0x87, 0x27, 0x12, 0xed, 0x48, 0x50, 0x2a, 0x49, 0xe4,
	0xea, 0x13, 0x4a, 0xa2, 0x1c, 0x4b, 0xe0, 0x6d, 0x58, 0xd2, 0x24, 0x71, 0x68, 0xd8, 0x65, 0x24,
	0x74, 0xac, 0x81, 0x47, 0x6c, 0x5a, 0x9f, 0x54, 0x82, 0x0b, 0x4a, 0x30, 0xe1, 0xce, 0x25, 0xd5,
	0xfc, 0xe7, 0x32, 0xac, 0xb6, 0x3a, 0x34, 0xbc, 0xa6, 0xe1, 0x09, 0xeb, 0x76, 0x6f, 0x0e, 0x89,
	0x20, 0xd6, 0xb9, 0x47, 0x6e, 0x68, 0xa8, 0xbe, 0xf3, 0x01, 0x40, 0xfa, 0x81, 0x75, 0x43, 0x29,
	0xaa, 0x90, 0xf8, 0xab, 0xf2, 0xf6, 0x94, 0x46, 0xec, 0xf9, 0x11, 0x4c, 0x7b, 0x8c, 0x38, 0x6c,
	0x28, 0xea, 0xe3, 0x6b, 0xe3, 0xeb, 0xd5, 0xed, 0xad, 0xcd, 0x38, 0x22, 0x9b, 0xdf, 0xf1, 0xce,
	0xcd, 0x13, 0xfd, 0x50, 0xc7, 0x63, 0xc2, 0x8c, 0x35, 0xe0, 0x16, 0x4c, 0xd1, 0x6b, 0x1a, 0x08,
	0x5e, 0x9f, 0x50, 0xba, 0x3e, 0xff, 0x38, 0x5d, 0x47, 0xf2, 0x19, 0x33, 0x7a, 0x14, 0xef, 0xc2,
	0x4a, 0xdf, 0x63, 0x5d, 0xe2, 0xe5, 0x9c, 0x14, 0x92, 0xe0, 0x2a, 0xf2, 0xd1, 0x92, 0xa6, 0x33,
	0x6e, 0x32, 0x49, 0x70, 0xd5, 0x78, 0x0f, 0xd5, 0x8c, 0x51, 0xf8, 0x31, 0xcc, 0x44, 0x66, 0x59,
	0xdc, 0x63, 0x22, 0x72, 0x4b, 0xd5, 0xcb, 0x88, 0xac, 0x42, 0xc5, 0xa1, 0x3d, 0xcb, 0x0d, 0x1c,
	0xfa, 0x93, 0xd8, 0x31, 0x0e, 0xed, 0xb5, 0xe5, 0x1a, 0xaf, 0x03, 0x4a, 0x9e, 0x1f, 0x76, 0xb5,
	0x0e, 0x1d, 0xee, 0xd9, 0x58, 0xc7, 0xb0, 0x2b, 0xd5, 0x34, 0x5a, 0x50, 0x6e, 0x0d, 0xc3, 0x90,
	0x06, 0xf6, 0x0d, 0x7e, 0x04, 0x55, 0x3b, 0xfa, 0x3b, 0x8d, 0x05, 0xc4, 0x50, 0xdb, 0xc1, 0xcb,
	0x30, 0x45, 0x7c, 0x19, 0x98, 0xe8, 0x85, 0xd1, 0xaa, 0xf1, 0xf7, 0x06, 0x54, 0x5a, 0x97, 0xc4,
	0xf3, 0x68, 0xd0, 0xa7, 0xd2, 0x78, 0x3b, 0x5e, 0xa4, 0x7a, 0xaa, 0x09, 0xd6, 0x76, 0x70, 0x03,
	0x64, 0xe9, 0xf4, 0x43, 0xca, 0x79, 0x6c, 0x7b, 0xbc, 0x96, 0x56, 0x70, 0xfa, 0xed, 0x90, 0x06,
	0xb6, 0x7a, 0x5a, 0x9b, 0x0d, 0x31, 0xd4, 0x76, 0xf0, 0x0a, 0x4c, 0xcb, 0x0f, 0x92, 0xa4, 0x4e,
	0xd0, 0x29, 0xb9, 0xd4, 0xb9, 0x62, 0xb3, 0xa0, 0xe7, 0xf6, 0x25, 0xa5, 0xdd, 0x5d, 0xd6, 0x40,
	0xdb, 0xc1, 0x75, 0x98, 0xb6, 0x3d, 0xe2, 0xfa, 0xd4, 0xa9, 0x4f, 0x29, 0x2a, 0x5e, 0x36, 0x18,
	0x54, 0xbf, 0x71, 0x43, 0x31, 0x24, 0x5e, 0x5b, 0x50, 0x3f, 0xef, 0x58, 0x63, 0xc4, 0xb1, 0x0f,
	0x00, 0xe8, 0xb7, 0x43, 0x77, 0xa0, 0x5d, 0xaa, 0x4d, 0xaf, 0x28, 0x44, 0x05, 0xe5, 0x53, 0x98,
	0x8d, 0xe8, 0xbc, 0xd7, 0x67, 0xb4, 0x48, 0xe4, 0xf3, 0x5f, 0x96, 0x60, 0x52, 0xa5, 0x0d, 0xbe,
	0x07, 0x65, 0x95, 0x38, 0xa9, 0x9b, 0xa6, 0xd5, 0xba, 0xed, 0x48, 0x37, 0x68, 0x8a, 0xbd, 0x0f,
	0xa8, 0xa3, 0x5e, 0x55, 0x36, 0x41, 0x41, 0x67, 0x12, 0xc1, 0x67, 0x00, 0x89, 0x4b, 0x79, 0x94,
	0xff, 0x5f, 0x7d, 0x5c, 0xce, 0x26, 0xb1, 0x32, 0x33, 0x2a, 0xf0, 0x3b, 0x88, 0x63, 0xed, 0xd2,
	0xb8, 0x08, 0x36, 0x3f, 0x52, 0x61, 0x94, 0x23, 0x66, 0x46, 0x03, 0xfe, 0x06, 0x6a, 0xd7, 0xda,
	0xaf, 0x96, 0x2b, 0xa8, 0xcf, 0xeb, 0x93, 0xff, 0x9f, 0x1a, 0xcd, 0x84, 0xc4, 0x9c, 0xb9, 0x4e,
	0x17, 0xbc, 0x19, 0xc0, 0x3d, 0xb9, 0x53, 0x9a, 0xb4, 0xef, 0xb2, 0xe0, 0xdc, 0x0d, 0xfa, 0x17,
	0xae, 0x4f, 0x79, 0xcb, 0x73, 0xa5, 0x47, 0x37, 0x61, 0xde, 0x91, 0x9a, 0x6c, 0x1a, 0x08, 0x1a,
	0x5a, 0x36, 0x73, 0xa8, 0xde, 0x35, 0xa7, 0xd5, 0xae, 0x39, 0x27, 0xc9, 0x96, 0xe2, 0x5a, 0x92,
	0xc2, 0x8f, 0x01, 0x06, 0x6e, 0xd0, 0xb7, 0x84, 0xd4, 0x51, 0x2f, 0x25, 0xdb, 0x6b, 0x65, 0x10,
	0x2b, 0x6e, 0xfe, 0xd3, 0x04, 0x54, 0x5b, 0x9d, 0xb3, 0xc3, 0xfd, 0x96, 0x32, 0x14, 0x3f, 0x81,
	0x59, 0xae, 0xec, 0xb6, 0xae, 0x69, 0xc8, 0x5d, 0x16, 0x44, 0xa1, 0xab, 0x69, 0xf4, 0x1b, 0x0d,
	0xe2, 0x1d, 0x58, 0xb2, 0x99, 0x3f, 0x20, 0xc2, 0xed, 0xba, 0x9e, 0x2b, 0x6e, 0x12, 0x69, 0x9d,
	0x35, 0x8b, 0x39, 0x32, 0x7e, 0xe8, 0x29, 0xcc, 0x45, 0xba, 0xd5, 0x81, 0x12, 0x17, 0xc0, 0x54,
	0xac, 0xbc, 0x23, 0xd1, 0xb6, 0x83, 0x5f, 0x41, 0xdd, 0xa1, 0xd7, 0x96, 0xdb, 0x0f, 0x58, 0x48,
	0x2d, 0x2e, 0x48, 0x5f, 0x7e, 0x44, 0xcf, 0xf5, 0x54, 0xe4, 0x64, 0xaa, 0x2c, 0x39, 0xf4, 0xba,
	0xad, 0xe8, 0x8e, 0x66, 0x8f, 0x25, 0x29, 0x33, 0xce, 0x93, 0x5f, 0x11, 0x97, 0xc8, 0x84, 0xdc,
	0x00, 0xbb, 0x5d, 0x59, 0xdd, 0xf7, 0xa0, 0xec, 0x13, 0x61, 0x5f, 0x4a, 0x6a, 0x4a, 0x53, 0x6a,
	0xdd, 0x76, 0xf0, 0x1f, 0xc2, 0x4c, 0x62, 0x16, 0x11, 0xb4, 0x5e, 0x5e, 0x33, 0xd6, 0x67, 0xb7,
	0x57, 0xd3, 0x48, 0x1e, 0x29, 0xd7, 0x74, 0x22, 0x1b, 0x89, 0xa0, 0xaf, 0x1b, 0x57, 0x16, 0x1d,
	0x05, 0xad, 0x7d, 0xce, 0xdd, 0x7e, 0x60, 0x56, 0x79, 0x8a, 0xc9, 0x3c, 0xd6, 0xaf, 0xf5, 0x99,
	0x43, 0xeb, 0xa0, 0x34, 0xaf, 0x64, 0x34, 0x1f, 0xee, 0xb7, 0x4e, 0x25, 0x7f, 0xca, 0x1c, 0xfa,
	0x7a, 0xe5, 0xca, 0xca, 0x01, 0x56, 0x3b, 0xb8, 0x26, 0x9e, 0xeb, 0x98, 0x15, 0x3f, 0x86, 0x64,
	0x11, 0x0e, 0x9d, 0x81, 0x65, 0xb3, 0x20, 0xa0, 0xb6, 0xb0, 0xdc, 0x41, 0xbd, 0xaa, 0x8b, 0x70,
	0xe8, 0x0c, 0x5a, 0x1a, 0x6c, 0x0f, 0xe4, 0x16, 0x99, 0x95, 0x1a, 0xb0, 0x50, 0xd4, 0x67, 0xf4,
	0x16, 0x99, 0xca, 0x9d, 0xb3, 0x50, 0xe0, 0x1f, 0x41, 0xa5, 0x4f, 0x7c, 0xaa, 0xed, 0xab, 0x29,
	0xfb, 0x96, 0xf3, 0xf6, 0x45, 0x47, 0x39, 0x7d, 0xbd, 0xac, 0xcd, 0x8b, 0xd7, 0x89, 0x75, 0xe5,
	0x7e, 0x84, 0x34, 0xff, 0x61, 0x2e, 0x4e, 0xa6, 0x73, 0x12, 0x8a, 0x1b, 0xe9, 0xf4, 0x81, 0xfc,
	0x23, 0xde, 0x01, 0x26, 0xcc, 0x69, 0xb5, 0x6e, 0x3b, 0x78, 0x17, 0xa6, 0xf5, 0x19, 0xaf, 0xf3,
	0xb2, 0xba, 0x7d, 0x3f, 0x5b, 0x39, 0x89, 0x8a, 0xcd, 0x53, 0x25, 0x64, 0xc6, 0xc2, 0xf2, 0x39,
	0x37, 0xb8, 0x76, 0x45, 0xb2, 0x2b, 0xdc, 0xf1, 0x5c, 0x5b, 0x09, 0x99, 0xb1, 0xb0, 0xcc, 0x3d,
	0x37, 0xb0, 0xa2, 0x58, 0x90, 0x2b, 0x37, 0xe8, 0xab, 0x0c, 0x29, 0x9b, 0x35, 0x37, 0xd0, 0x0e,
	0x57, 0xa0, 0xcc, 0x7f, 0x6d, 0xf2, 0x80, 0x70, 0xfe, 0x9e, 0x85, 0x3a, 0x5b, 0x2a, 0x66, 0x4d,
	0xa1, 0xe7, 0x11, 0x88, 0x5b, 0x30, 0xe3, 0xd1, 0x9e, 0xb0, 0xe2, 0x6f, 0x00, 0x65, 0xcb, 0x5a,
	0xb1, 0x2d, 0x27, 0xb4, 0x27, 0xa2, 0xef, 0xa8, 0x7a, 0xc9, 0xdf, 0xaa, 0xa7, 0xf9, 0x23, 0xe6,
	0x06, 0xaa, 0x8e, 0x55, 0x18, 0x27, 0xcc, 0xb2, 0x04, 0x64, 0xf1, 0xe2, 0x1f, 0xc3, 0x6c, 0x97,
	0x09, 0xcb, 0x71, 0x7b, 0x3d, 0xd7, 0x1e, 0x7a, 0xe2, 0x46, 0x05, 0x30, 0x9f, 0x97, 0x87, 0xfb,
	0xad, 0x03, 0x26, 0x0e, 0x13, 0x91, 0xd7, 0x75, 0x1d, 0xa2, 0x1c, 0x68, 0xbd, 0x63, 0x01, 0x35,
	0x6b, 0xdd, 0x2c, 0x86, 0x37, 0x61, 0x61, 0xc8, 0xa9, 0x65, 0x0f, 0xb9, 0x60, 0xbe, 0x0c, 0xbe,
	0xea, 0xd4, 0x54, 0x02, 0x94, 0xcd, 0xf9, 0x21, 0xa7, 0x2d, 0xc5, 0xc4, 0x2d, 0x1c, 0x3e, 0x84,
	0xb9, 0x51, 0xd9, 0xd9, 0x35, 0x63, 0xbd, 0x9a, 0x35, 0xe7, 0x56, 0xdf, 0x67, 0xce, 0xda, 0x79,
	0x2d, 0x2f, 0x60, 0x52, 0x96, 0x38, 0xaf, 0xcf, 0x29, 0x77, 0x3d, 0x2c, 0x76, 0x57, 0xdc, 0x25,
	0x9a, 0x5a, 0xb8, 0xf1, 0xeb, 0x12, 0x4c, 0x69, 0x97, 0x7d, 0xa8, 0x9f, 0x7a, 0x0c, 0x33, 0x03,
	0x1a, 0x72, 0x16, 0x90, 0x6c, 0x9f, 0x58, 0x8d, 0x30, 0xd5, 0x2a, 0x3e, 0x86, 0x99, 0xd0, 0xed,
	0x5f, 0x0a, 0x6e, 0xf5, 0x3c, 0xd2, 0xe7, 0xd1, 0x11, 0x56, 0xd5, 0xd8, 0xb1, 0x84, 0x64, 0xd6,
	0xba, 0xdc, 0x0a, 0x29, 0x71, 0x6e, 0xa2, 0xed, 0x66, 0xda, 0xe5, 0xa6, 0x5c, 0xe2, 0x3f, 0x80,
	0xea, 0x40, 0xed, 0xe2, 0x96, 0xb8, 0x19, 0xe8, 0xce, 0x70, 0x76, 0xfb, 0x71, 0xf1, 0x67, 0x1c,
	0xe9, 0xfd, 0xfe, 0xe2, 0x66, 0x40, 0x5f, 0x2f, 0x5e, 0x59, 0x34, 0x5d, 0x46, 0x27, 0x81, 0x09,
	0x83, 0x04, 0xba, 0x7b, 0x43, 0x9d, 0xfa, 0x8e, 0x0d, 0xf5, 0x0d, 0x94, 0x07, 0x1e, 0x11, 0x3d,
	0x16, 0xfa, 0xf5, 0xe9, 0xa2, 0xda, 0x3d, 0x8f, 0xd8, 0xd7, 0x0b, 0x57, 0x16, 0xcd, 0xac, 0x75,
	0x4e, 0x24, 0x0f, 0x63, 0x0c, 0x13, 0xd2, 0xd7, 0x6a, 0xeb, 0xab, 0x99, 0xea, 0xef, 0xc6, 0x5f,
	0x19, 0x00, 0x69, 0xe6, 0x7e, 0x84, 0xeb, 0x73, 0x7e, 0x2d, 0xdd, 0xf6, 0xeb, 0x88, 0xf3, 0xc6,
	0x7f, 0x30, 0xe7, 0x35, 0x5c, 0x98, 0xd2, 0xf5, 0xfe, 0x03, 0x24, 0xc8, 0x03, 0x00, 0xbd, 0x67,
	0x38, 0x56, 0xf7, 0x26, 0x4a, 0x8f, 0x4a, 0x84, 0x1c, 0xdc, 0x34, 0xfe, 0x71, 0x1c, 0xca, 0xc9,
	0x18, 0xf3, 0x09, 0x54, 0x8b, 0xe7, 0x17, 0x20, 0x1f, 0x39, 0xb9, 0x3c, 0x86, 0x99, 0x9e, 0x1b,
	0x72, 0x61, 0xa9, 0xaf, 0x89, 0x1b, 0xc2, 0xaa, 0xc2, 0xd4, 0x87, 0x2a, 0x9b, 0xe5, 0x06, 0xcb,
	0x63, 0x11, 0xdd, 0x16, 0x56, 0x15, 0x16, 0x89, 0x3c, 0x85, 0xb9, 0x60, 0xe8, 0x5b, 0x89, 0x26,
	0x9b, 0x46, 0x69, 0x53, 0x0b, 0x86, 0xfe, 0x71, 0xa4, 0xcb, 0xa6, 0xb8, 0x09, 0x12, 0xb0, 0x04,
	0x1b, 0x58, 0xe2, 0x32, 0xa4, 0x54, 0x25, 0x4d, 0xcd, 0xac, 0x06, 0x43, 0xff, 0x82, 0x0d, 0x2e,
	0x24, 0x94, 0x9f, 0x49, 0xca, 0x23, 0x33, 0xc9, 0x17, 0x80, 0xd3, 0x41, 0x2b, 0x69, 0x72, 0x2b,
	0x4a, 0x0a, 0xc5, 0x52, 0xe7, 0x71, 0xb3, 0x5b, 0x30, 0x96, 0x41, 0xd1, 0x58, 0xb6, 0x08, 0x93,
	0x3a, 0x69, 0xf4, 0x51, 0xa6, 0x17, 0xf8, 0x73, 0x98, 0xbf, 0x3d, 0x8b, 0xe9, 0x43, 0x0c, 0x79,
	0x23, 0x83, 0x18, 0xde, 0x81, 0x65, 0xed, 0x24, 0xc1, 0xac, 0x61, 0xe0, 0x31, 0xfb, 0xca, 0x0a,
	0xa9, 0xf2, 0x78, 0x4d, 0x4f, 0x6f, 0x8a, 0xbd, 0x60, 0xbf, 0xa7, 0x38, 0x53, 0x51, 0xcd, 0x9f,
	0x1b, 0x50, 0x3b, 0x8a, 0x36, 0x66, 0x95, 0xa7, 0xf8, 0x1e, 0x2c, 0x5d, 0x59, 0x34, 0x0b, 0x59,
	0xfb, 0x8e, 0xef, 0x06, 0xc8, 0xc0, 0xab, 0xb0, 0x32, 0x4a, 0xb5, 0x42, 0x4a, 0x04, 0x0b, 0x51,
	0x09, 0xdf, 0x87, 0xfa, 0x28, 0x29, 0x27, 0x1f, 0xea, 0x9c, 0x9e, 0xa2, 0x09, 0xbc, 0x06, 0xf7,
	0x47, 0xd9, 0xb7, 0x6e, 0xff, 0x32, 0x91, 0x28, 0x37, 0x0f, 0xa1, 0x9a, 0xc9, 0x78, 0x5c, 0x87,
	0xc2, 0x9c, 0x47, 0x63, 0x91, 0x15, 0x19, 0xa6, 0x33, 0xa0, 0xb6, 0x50, 0x56, 0x18, 0xcd, 0x36,
	0xc0, 0x91, 0xcc, 0x4d, 0x5d, 0x6e, 0x0d, 0x58, 0xbe, 0xb2, 0x68, 0xb2, 0xb6, 0x5a, 0x24, 0xd0,
	0xdf, 0x8d, 0x0c, 0xfc, 0x08, 0x56, 0x73, 0x9c, 0x26, 0x5a, 0x8c, 0x79, 0x0e, 0x7b, 0x1f, 0xa0,
	0x52, 0xf3, 0xc7, 0xb0, 0xd4, 0xea, 0x9c, 0x45, 0xf3, 0x77, 0xe7, 0x26, 0xb0, 0x3b, 0x82, 0x85,
	0xa4, 0xff, 0xc1, 0x02, 0x9b, 0x85, 0x92, 0xeb, 0x44, 0xc5, 0x5f, 0x72, 0x1d, 0x19, 0xda, 0x6b,
	0xe2, 0x0d, 0xe3, 0x79, 0x5c, 0x2f, 0x9a, 0x7f, 0x33, 0x05, 0x8b, 0xad, 0xce, 0x99, 0x3c, 0x2c,
	0xa2, 0x57, 0x44, 0x0d, 0xee, 0x27, 0xb7, 0xb5, 0x1f, 0x4c, 0xfc, 0xec, 0x17, 0x0f, 0x8c, 0x8f,
	0x9e, 0x9a, 0x9f, 0xc5, 0x39, 0x97, 0x24, 0x48, 0x3c, 0x1b, 0xe6, 0xe7, 0xf7, 0x34, 0xe9, 0x26,
	0xd4, 0xc1, 0x1b, 0x25, 0xdd, 0x0b, 0x58, 0x8e, 0xd3, 0x47, 0x45, 0x27, 0x4d, 0x72, 0x3d, 0x72,
	0x2d, 0x6a, 0x56, 0x87, 0x2e, 0x49, 0xf4, 0xdf, 0x82, 0x46, 0xa6, 0x2c, 0x48, 0x28, 0x5c, 0x92,
	0x29, 0x0f, 0x59, 0x8a, 0x25, 0x73, 0x25, 0x29, 0x0f, 0xcd, 0x7f, 0x57, 0x95, 0x94, 0x8b, 0xaa,
	0xe4, 0x33, 0x98, 0xf7, 0x7d, 0xab, 0x4b, 0x02, 0xd5, 0xce, 0xcb, 0x5e, 0xd5, 0x1f, 0x44, 0xa5,
	0x37, 0xeb, 0xfb, 0x07, 0x24, 0x90, 0x0d, 0x7d, 0x47, 0xa2, 0xb2, 0xce, 0x23, 0xd1, 0x90, 0x12,
	0xce, 0x82, 0xa8, 0xec, 0xaa, 0x4a, 0xcc, 0x54, 0x10, 0xde, 0x85, 0xba, 0xef, 0xc7, 0x5f, 0x39,
	0xa2, 0x55, 0xd7, 0xe1, 0xa2, 0xef, 0xeb, 0xef, 0xcc, 0xe9, 0xfe, 0x0a, 0x16, 0xf3, 0xcf, 0x45,
	0xaf, 0xd0, 0x95, 0x39, 0x9f, 0x79, 0x26, 0x7a, 0x91, 0x9c, 0x4d, 0x43, 0xea, 0xb8, 0x82, 0x47,
	0xb5, 0x18, 0x2f, 0xe5, 0x97, 0x8b, 0x61, 0xd8, 0x65, 0x56, 0x1a, 0xce, 0x59, 0xfd, 0xe5, 0x0a,
	0x3e, 0xcd, 0xdc, 0xcc, 0x64, 0xe5, 0xd2, 0xc8, 0xce, 0xe9, 0xda, 0x4e, 0xa5, 0xd3, 0xf0, 0x1e,
	0xc3, 0xda, 0x88, 0xee, 0xdb, 0x81, 0x41, 0x2a, 0x30, 0xf7, 0x73, 0x2f, 0x1b, 0x8d, 0xce, 0x56,
	0xfe, 0xdd, 0x69, 0x8c, 0xe6, 0xd5, 0xbb, 0x71, 0xee, 0x61, 0x1d, 0xa8, 0x7b, 0x50, 0x7e, 0xef,
	0x06, 0xdc, 0xda, 0xe2, 0xa2, 0x8e, 0xf5, 0x17, 0xcb, 0xf5, 0x16, 0x17, 0x09, 0xb5, 0x1d, 0x38,
	0xf5, 0x85, 0x94, 0xda, 0x0e, 0x9c, 0x84, 0xda, 0x09, 0x9d, 0xfa, 0x62, 0x4a, 0xed, 0x84, 0x4e,
	0xf3, 0xef, 0x0c, 0x58, 0x91, 0xcd, 0x55, 0x47, 0x84, 0x94, 0x8a, 0x9e, 0xdc, 0x41, 0x3a, 0x54,
	0x08, 0x37, 0xe8, 0xcb, 0x11, 0x6f, 0x66, 0x18, 0x38, 0x34, 0xf4, 0x58, 0xe8, 0x64, 0xee, 0x23,
	0x12, 0xac, 0xed, 0xa8, 0x91, 0x2e, 0x7d, 0xd2, 0x4a, 0xea, 0xb3, 0x96, 0x41, 0xdb, 0x0e, 0xfe,
	0x12, 0x16, 0xe4, 0x24, 0x2b, 0x4f, 0x32, 0xab, 0xc7, 0x42, 0x7d, 0xdc, 0x84, 0xaa, 0xcb, 0xae,
	0x99, 0x48, 0x52, 0x6d, 0x87, 0x1f, 0xb3, 0x50, 0x6f, 0x3e, 0xaa, 0x51, 0x0e, 0x29, 0x17, 0x6e,
	0x9f, 0xe6, 0x2e, 0xd4, 0x6a, 0x31, 0xaa, 0x3c, 0xd2, 0xfc, 0x95, 0x01, 0x8b, 0x99, 0xc6, 0x90,
	0x26, 0x86, 0x3f, 0x80, 0xca, 0x60, 0xf8, 0xd3, 0x9f, 0x7a, 0xe9, 0x2d, 0xca, 0xdb, 0x31, 0xb3,
	0xac, 0xa1, 0xb6, 0x83, 0x9f, 0xc1, 0xac, 0x18, 0x0a, 0x16, 0xaa, 0x80, 0x5d, 0x12, 0xae, 0x8f,
	0x4e, 0x29, 0x53, 0x8b, 0xf1, 0x73, 0x09, 0xe3, 0x4d, 0xc0, 0x9c, 0x04, 0x4e, 0x97, 0xfd, 0xc4,
	0xe2, 0x97, 0x24, 0xa4, 0xba, 0x9b, 0x96, 0x35, 0x5f, 0x79, 0x3b, 0x66, 0xa2, 0x88, 0xeb, 0x48,
	0x4a, 0xf5, 0xd5, 0xdf, 0xc0, 0x62, 0xd6, 0x1b, 0x3c, 0xb2, 0x47, 0x59, 0x5f, 0xcd, 0xb5, 0x23,
	0xc5, 0x1e, 0x7f, 0x3b, 0x66, 0x2e, 0xf0, 0xdb, 0xf0, 0x01, 0x40, 0x39, 0xd6, 0xd5, 0xfc, 0xc5,
	0x84, 0x9e, 0xe2, 0x3b, 0x82, 0x84, 0xe2, 0xd8, 0x0d, 0x1c, 0x37, 0xe8, 0xab, 0x21, 0x43, 0x75,
	0x0d, 0x4f, 0x60, 0xd6, 0x56, 0xdb, 0xdd, 0xc8, 0xd0, 0x5c, 0xd3, 0x68, 0xdc, 0xdc, 0xe5, 0x47,
	0xc7, 0xf1, 0xef, 0x3f, 0x3a, 0x66, 0xbb, 0xc5, 0x89, 0xef, 0xd3, 0x2d, 0xde, 0x1e, 0x4d, 0x26,
	0x7f, 0xc0, 0xd1, 0x24, 0x37, 0x91, 0x4e, 0x7d, 0xbf, 0x89, 0x14, 0x9f, 0x41, 0x35, 0x54, 0x57,
	0x29, 0x5a, 0x9d, 0x1e, 0xed, 0xeb, 0x79, 0x75, 0xfa, 0xae, 0x45, 0x29, 0x5c, 0xd4, 0x0a, 0x53,
	0xc4, 0x32, 0xcf, 0x7e, 0xdf, 0x84, 0x30, 0x59, 0xe3, 0x13, 0xc0, 0x89, 0x75, 0x69, 0xf2, 0x54,
	0x54, 0xf2, 0x3c, 0x2c, 0x9c, 0x85, 0x92, 0x94, 0x37, 0x51, 0x7f, 0x04, 0x69, 0xfe, 0xa6, 0x04,
	0x75, 0x29, 0xba, 0x1f, 0xdc, 0x5c, 0xb0, 0x37, 0x2d, 0x93, 0xca, 0x49, 0x7d, 0x9f, 0x73, 0x1a,
	0x0a, 0x2e, 0x37, 0xce, 0xfc, 0x1d, 0x4c, 0xbc, 0xc4, 0xbf, 0x0b, 0xd3, 0x44, 0x0b, 0x45, 0xc3,
	0xf3, 0xf3, 0xfc, 0x9b, 0x8b, 0xd4, 0x6d, 0x5e, 0x84, 0xc4, 0xbe, 0xa2, 0x8e, 0x5e, 0x9a, 0xb1,
	0x82, 0xc6, 0xaf, 0x0c, 0xa8, 0xe5, 0x28, 0xdc, 0x80, 0x72, 0xcf, 0xf5, 0x74, 0xf7, 0x64, 0xe8,
	0x7e, 0x35, 0x5e, 0xe3, 0x47, 0x50, 0xf5, 0xdc, 0x80, 0x5a, 0xc1, 0x50, 0x36, 0x33, 0x51, 0xe2,
	0x82, 0x84, 0xde, 0x0d, 0xe3, 0x31, 0x81, 0x13, 0x7f, 0xe0, 0x51, 0xcb, 0xe7, 0x7d, 0x5d, 0x86,
	0x66, 0x45, 0x23, 0xa7, 0xbc, 0x2f, 0xb7, 0xab, 0x88, 0xe6, 0x82, 0xd8, 0x57, 0x2a, 0x0f, 0x2b,
	0x66, 0x55, 0x63, 0x1d, 0x09, 0xc9, 0x57, 0xa8, 0xfb, 0x2a, 0xd9, 0xce, 0xd2, 0xf8, 0xaa, 0x13,
	0x14, 0x74, 0x2c, 0x11, 0xfc, 0x09, 0xd4, 0x7a, 0xc3, 0xc0, 0x16, 0x32, 0xaa, 0xca, 0x48, 0x3d,
	0xa1, 0xcf, 0xc4, 0xa0, 0x6a, 0xac, 0xef, 0xab, 0xeb, 0x52, 0xc7, 0x95, 0x80, 0x6a, 0x73, 0x2b,
	0x66, 0x0a, 0x34, 0x7f, 0x1b, 0xd6, 0xee, 0xf2, 0x93, 0x49, 0xf9, 0x80, 0x05, 0x5c, 0x36, 0x61,
	0xd3, 0x7c, 0x68, 0xdb, 0xf2, 0xa0, 0x30, 0xf4, 0x14, 0x18, 0x2d, 0x9b, 0x7f, 0x61, 0x40, 0x4d,
	0x3e, 0xfe, 0xd6, 0xe5, 0x82, 0xf5, 0x43, 0xe2, 0xe3, 0x0b, 0x98, 0xbf, 0x8c, 0x17, 0x56, 0x77,
	0x68, 0x5f, 0x51, 0xa1, 0xc7, 0x81, 0xea, 0xf6, 0xb3, 0x7c, 0x68, 0x92, 0x67, 0x36, 0x93, 0xbf,
	0x0e, 0x94, 0xbc, 0x89, 0x2e, 0xf3, 0x00, 0x6f, 0xfc, 0x0e, 0xcc, 0x8d, 0x08, 0xa5, 0xfd, 0x94,
	0x91, 0xe9, 0xa7, 0x24, 0x6a, 0x67, 0x6e, 0xae, 0xf5, 0xa2, 0xf9, 0x67, 0x06, 0x3c, 0x94, 0xaf,
	0x3c, 0x57, 0x7b, 0x6a, 0xe6, 0x70, 0x4c, 0xed, 0x5e, 0xbd, 0xb5, 0x09, 0x67, 0xb6, 0xe0, 0xcf,
	0x20, 0xdb, 0x67, 0xeb, 0xa1, 0x4d, 0xbf, 0x60, 0x2e, 0x83, 0xab, 0x86, 0xf5, 0x25, 0x54, 0x12,
	0xeb, 0x55, 0xd0, 0xab, 0xd9, 0xad, 0x2a, 0xf7, 0xdd, 0x66, 0x2a, 0xd9, 0xfc, 0x63, 0x03, 0x9a,
	0xdf, 0x6d, 0xe1, 0x89, 0xcb, 0x05, 0xb6, 0x60, 0x39, 0x6b, 0x48, 0xf2, 0x7c, 0xec, 0xe2, 0xf5,
	0xfc, 0xab, 0xee, 0xd6, 0x66, 0x2e, 0x79, 0x05, 0x28, 0xdf, 0xf8, 0xf7, 0x12, 0x2c, 0x1e, 0xbd,
	0x69, 0x1d, 0xee, 0xb7, 0x5a, 0xea, 0x17, 0xb0, 0xd3, 0xe8, 0x37, 0x2d, 0xfc, 0x08, 0x1a, 0x57,
	0xd6, 0xd1, 0x1d, 0x99, 0x82, 0xfe, 0x75, 0x17, 0x3f, 0x83, 0xe6, 0xdd, 0x02, 0x71, 0x2a, 0xa1,
	0x7f, 0xdb, 0xc5, 0x1b, 0xf0, 0x44, 0x0b, 0xbe, 0x69, 0xb5, 0x05, 0xf5, 0x8f, 0x1c, 0x57, 0xb0,
	0xd0, 0xa4, 0x9c, 0x86, 0xd7, 0x44, 0xa6, 0x24, 0x37, 0xe9, 0xb7, 0x43, 0xca, 0x05, 0xfa, 0xcf,
	0x3d, 0xfc, 0x39, 0x3c, 0xfd, 0x90, 0x6c, 0xa4, 0xf8, 0xd7, 0x7b, 0xf8, 0x09, 0xac, 0xdd, 0x25,
	0x4c, 0x25, 0x70, 0x48, 0x7b, 0xe8, 0x37, 0x7b, 0xf8, 0x4b, 0x58, 0xff, 0x90, 0x58, 0xa2, 0xf5,
	0xbf, 0xf6, 0xf0, 0x67, 0xf0, 0x69, 0x91, 0xb8, 0x47, 0x09, 0xa7, 0x19, 0x4b, 0xd0, 0x7f, 0xef,
	0xe1, 0x2d, 0xf8, 0xe2, 0x63, 0x44, 0x13, 0xed, 0xff, 0xb3, 0xb7, 0xf1, 0x27, 0x06, 0x54, 0xe5,
	0x3e, 0x2b, 0x87, 0x0a, 0xda, 0x3e, 0xd4, 0x63, 0x57, 0x06, 0x88, 0x37, 0x72, 0x34, 0x86, 0x97,
	0x60, 0x3e, 0x4f, 0xb9, 0x67, 0x1d, 0x64, 0xe8, 0x81, 0x2b, 0x0b, 0xbf, 0x61, 0xac, 0xef, 0xa9,
	0xc1, 0x08, 0x95, 0xf0, 0x43, 0x15, 0xb6, 0x0c, 0xab, 0x6e, 0x96, 0xcf, 0xae, 0x69, 0x28, 0xf9,
	0x71, 0xbc, 0x0c, 0x38, 0xcf, 0x5f, 0x48, 0xcf, 0x4f, 0x6c, 0x1c, 0xc3, 0x6c, 0x7e, 0xfb, 0xd7,
	0x93, 0xd8, 0xed, 0x23, 0x01, 0x8d, 0xe9, 0xf1, 0x6a, 0x84, 0x69, 0x5d, 0xba, 0x01, 0x41, 0xc6,
	0xc6, 0x9f, 0xcb, 0xc1, 0x32, 0x7b, 0x1c, 0xeb, 0xb9, 0xad, 0xf0, 0x84, 0xce, 0xaa, 0x4a, 0xc9,
	0x16, 0xe1, 0x43, 0xe2, 0x21, 0x43, 0xcf, 0x8e, 0x79, 0xee, 0x3c, 0x74, 0xaf, 0x89, 0xd0, 0xf7,
	0xcf, 0xa8, 0x54, 0xa4, 0xba, 0xc3, 0x3c, 0x76, 0xc0, 0x04, 0x1a, 0x2f, 0x52, 0xad, 0xfb, 0x73,
	0x34, 0xb1, 0xf1, 0xd7, 0x25, 0x98, 0xc9, 0x1e, 0x9f, 0xa9, 0xf0, 0xe8, 0x81, 0x8a, 0xc6, 0xd2,
	0x10, 0x25, 0xdc, 0x3b, 0x16, 0xfa, 0xca, 0xc4, 0xc4, 0x47, 0x09, 0x75, 0x21, 0x9b, 0x62, 0x54,
	0xc2, 0x2b, 0xb0, 0x30, 0xc2, 0x1c, 0x0e, 0x19, 0x47, 0xe3, 0xf8, 0x31, 0x3c, 0x18, 0x7d, 0x84,
	0xda, 0x97, 0xe7, 0xb2, 0x8a, 0xe5, 0x36, 0xb3, 0x8f, 0x26, 0x0a, 0x8c, 0xe9, 0xe8, 0x56, 0x0e,
	0x4d, 0x16, 0x18, 0xa3, 0x6b, 0x1e, 0x4d, 0xa5, 0xde, 0xc8, 0x18, 0xa3, 0xdb, 0x45, 0x34, 0x9d,
	0xe6, 0x45, 0xaa, 0x33, 0xed, 0xe4, 0x50, 0xb9, 0xe0, 0x9d, 0x2d, 0x8f, 0x70, 0xee, 0xda, 0xa8,
	0xba, 0xf1, 0xf3, 0x92, 0x8e, 0xa9, 0x72, 0xbb, 0x9c, 0x9c, 0x53, 0x2b, 0x12, 0xc8, 0x92, 0xff,
	0x3c, 0xcf, 0x7a, 0x2b, 0x4f, 0x6d, 0x21, 0xe3, 0x2e, 0x6a, 0x1b, 0x95, 0xee, 0xa2, 0x76, 0xd0,
	0xf8, 0x5d, 0xd4, 0x0b, 0x34, 0x71, 0x17, 0xf5, 0x32, 0xeb, 0xa7, 0x3c, 0xb5, 0x8b, 0xa6, 0xee,
	0xa2, 0x5e, 0x29, 0x2f, 0xdd, 0x1b, 0xa5, 0xd2, 0x5b, 0x86, 0xff, 0x35, 0x36, 0xfe, 0xc3, 0x80,
	0xf9, 0x5b, 0xad, 0x5c, 0x5a, 0x91, 0xb7, 0x3b, 0x3c, 0x34, 0x76, 0x17, 0x7b, 0x44, 0xf8, 0x0d,
	0x32, 0xd2, 0xb8, 0xe4, 0xd9, 0x53, 0xea, 0xb8, 0x43, 0x3f, 0xbe, 0x5e, 0xb9, 0xcd, 0xbf, 0x25,
	0xa1, 0x93, 0x4d, 0xa6, 0x91, 0x37, 0xcb, 0xa0, 0xfa, 0x24, 0xa4, 0xd9, 0x64, 0x1a, 0x79, 0xc1,
	0x09, 0x9a, 0x4c, 0x2b, 0x6c, 0x84, 0x63, 0xbe, 0x4f, 0x8e, 0x68, 0x17, 0x4d, 0x6d, 0xfc, 0x65,
	0x19, 0x40, 0x0a, 0xec, 0xb7, 0xd3, 0xdb, 0x99, 0x74, 0x5d, 0xb4, 0x59, 0x45, 0xcc, 0xc9, 0xb5,
	0x27, 0x43, 0x5e, 0x00, 0xcb, 0x70, 0x17, 0xc0, 0x32, 0xd4, 0x05, 0xb0, 0x0c, 0x73, 0x01, 0x2c,
	0x43, 0x5c, 0x00, 0xcb, 0xf0, 0x16, 0xc0, 0x32, 0xb4, 0x05, 0xf0, 0x1e, 0x2a, 0xe3, 0x05, 0x98,
	0xcb, 0xc1, 0xa7, 0x27, 0x68, 0x01, 0x2f, 0x02, 0xca, 0x81, 0xe7, 0x07, 0xcf, 0xd1, 0x62, 0x01,
	0xba, 0x85, 0x96, 0x0a, 0xd0, 0x6d, 0xb4, 0x5c, 0x80, 0xee, 0xa0, 0x95, 0x02, 0xf4, 0x05, 0xaa,
	0x17, 0xa0, 0x2f, 0xd1, 0xbd, 0x02, 0x74, 0x17, 0x35, 0x0a, 0xd0, 0x57, 0x68, 0xb5, 0x00, 0xdd,
	0x43, 0xf7, 0x0b, 0xd0, 0xaf, 0xd1, 0x83, 0x5b, 0x7e, 0x38, 0x3f, 0xd8, 0x7a, 0x8e, 0x1e, 0x16,
	0xc1, 0x5b, 0xe8, 0x51, 0x11, 0xbc, 0x8d, 0xd6, 0x8a, 0xe0, 0x1d, 0xf4, 0xb8, 0x08, 0x7e, 0x81,
	0x9a, 0x45, 0xf0, 0x4b, 0xf4, 0x49, 0x11, 0xbc, 0x8b, 0x3e, 0x2d, 0x82, 0x5f, 0xa1, 0x27, 0x45,
	0xf0, 0x1e, 0x7a, 0x5a, 0x04, 0x7f, 0x8d, 0x9e, 0x15, 0xc0, 0xdb, 0xcf, 0xd1, 0x7a, 0x11, 0xbc,
	0x85, 0x3e, 0x2b, 0x82, 0xb7, 0xd1, 0x46, 0x11, 0xbc, 0x83, 0x3e, 0x2f, 0x82, 0x5f, 0xa0, 0x2f,
	0x8a, 0xe0, 0x97, 0xe8, 0xcb, 0x22, 0x78, 0x17, 0x6d, 0x16, 0xc1, 0xaf, 0xd0, 0x57, 0x45, 0xf0,
	0x1e, 0x7a, 0x5e, 0x04, 0x7f, 0x8d, 0xb6, 0x0a, 0xe0, 0x9d, 0xe7, 0x68, 0xbb, 0x08, 0xde, 0x42,
	0x3b, 0x45, 0xf0, 0x36, 0x7a, 0x51, 0x04, 0xef, 0xa0, 0x97, 0x45, 0xf0, 0x0b, 0xb4, 0x5b, 0x04,
	0xbf, 0x44, 0xaf, 0x36, 0xfe, 0xd4, 0xd0, 0xfd, 0x83, 0x3a, 0x6b, 0xf5, 0xef, 0xbf, 0x7a, 0xe7,
	0x4a, 0x01, 0xab, 0x1d, 0xc4, 0x57, 0x4b, 0xf1, 0x6d, 0x6e, 0x96, 0x6d, 0x31, 0x39, 0x07, 0x09,
	0xea, 0x20, 0x03, 0x3f, 0xd5, 0xad, 0x65, 0x4a, 0x1e, 0x13, 0xd7, 0xa3, 0x8e, 0xf5, 0x8e, 0x8a,
	0xf7, 0x2c, 0xbc, 0x6a, 0x73, 0x3e, 0xa4, 0x1c, 0x95, 0xf0, 0xa7, 0xba, 0x01, 0xbc, 0x25, 0xa7,
	0x7f, 0x9a, 0x6e, 0x85, 0x84, 0x5f, 0xa2, 0xf1, 0x8d, 0xbf, 0x35, 0x60, 0x2e, 0x9a, 0xf1, 0x6f,
	0xe2, 0x1f, 0xa7, 0xf5, 0xae, 0x98, 0x41, 0xd4, 0x3d, 0xb3, 0x1b, 0xf4, 0xd1, 0x18, 0x7e, 0xa0,
	0x0e, 0x81, 0x2c, 0x77, 0xe4, 0xb9, 0xbe, 0x1b, 0x10, 0x6d, 0x9c, 0xfe, 0xae, 0x2c, 0xbd, 0xdf,
	0x25, 0x81, 0xc3, 0x02, 0xea, 0xa0, 0x92, 0xbe, 0x5e, 0xce, 0xb1, 0x87, 0x2e, 0x8f, 0x7e, 0x8c,
	0xa6, 0x72, 0xcb, 0xd6, 0x7b, 0x6e, 0x56, 0x20, 0x63, 0xad, 0x6a, 0x4e, 0x7e, 0x29, 0x0f, 0x99,
	0xd1, 0x9f, 0xd8, 0xf5, 0x41, 0x71, 0xd7, 0x2f, 0xef, 0x68, 0xec, 0x2e, 0xbe, 0x1d, 0xbc, 0xd1,
	0xf7, 0xde, 0xea, 0xa8, 0xb8, 0xcd, 0x9f, 0x33, 0x2e, 0x94, 0x03, 0x51, 0xe9, 0x2e, 0x91, 0x8e,
	0xdb, 0x0f, 0xa8, 0x73, 0x36, 0x14, 0xf1, 0x81, 0x53, 0x60, 0x45, 0xe2, 0x81, 0x89, 0x83, 0xc9,
	0xb7, 0xc6, 0xcf, 0x8c, 0xb1, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x9b, 0x70, 0x3e, 0x61,
	0x27, 0x00, 0x00,
}
